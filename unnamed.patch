Index: app/src/main/res/layout/activity_launch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_launch.xml	(revision )
+++ app/src/main/res/layout/activity_launch.xml	(revision )
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#938a85"
+    android:gravity="center_horizontal"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="2"
+        android:gravity="center_horizontal">
+
+        <ImageView
+            android:layout_width="640px"
+            android:layout_height="600px"
+            android:layout_marginTop="420px"
+            android:background="@drawable/logo" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:gravity="center_horizontal|bottom"
+        android:orientation="vertical">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="Com Ssa"
+            android:textColor="#ffffff"
+            android:textSize="110px" />
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="Computer Science Surpporting Software Application"
+            android:textColor="#ffffff"
+            android:textSize="50px"
+            android:onClick="LoginClicked" />
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="90px"
+            android:layout_marginTop="40px"
+            android:gravity="center"
+            android:text="쏘맥보단 쏘공"
+            android:textColor="#ffffff"
+            android:textSize="30px" />
+    </LinearLayout>
+</LinearLayout>
Index: app/src/main/res/layout/list_item_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_item_main.xml	(revision )
+++ app/src/main/res/layout/list_item_main.xml	(revision )
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="#e3e3e3"
+    android:gravity="center"
+    android:orientation="vertical"
+    android:paddingBottom="17px"
+    android:paddingLeft="35px"
+    android:paddingRight="35px"
+    android:paddingTop="17px"
+    android:weightSum="1">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="#ffffff"
+        android:orientation="vertical"
+        android:padding="35px"
+        android:weightSum="1"
+        android:layout_weight="3.18">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="110px"
+            android:orientation="horizontal"
+            android:weightSum="1">
+
+            <!--<TextView-->
+                <!--android:id="@+id/board_numberText"-->
+                <!--android:layout_width="110px"-->
+                <!--android:layout_height="110px"-->
+                <!--android:text="박천권"-->
+                <!--android:textColor="#000000"-->
+                <!--android:textSize="80px"-->
+                <!--android:textStyle="bold"-->
+                <!--android:background="@drawable/people" />-->
+            <ImageView
+                android:id="@+id/profile_img"
+                android:layout_width="110px"
+                android:layout_height="110px"
+                android:background="@drawable/people" />
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20px"
+                android:gravity="center_vertical"
+                android:orientation="horizontal"
+                android:weightSum="1">
+
+                <TextView
+                    android:id="@+id/write_user_idText"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="201215548"
+                    android:textColor="#000000"
+                    android:textSize="50px"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:id="@+id/name"
+                    android:text="류원상"
+                    android:textColor="#000000"
+                    android:textSize="50px"
+                    android:textStyle="bold"
+                    android:layout_weight="0.79" />
+
+                <TextView
+
+                    android:layout_width="wrap_content"
+                    android:id="@+id/board_numberText"
+
+
+                    android:text="50"
+                    android:textColor="@color/colorPrimaryDark"
+                    android:layout_height="wrap_content" />
+
+            </LinearLayout>
+
+
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/datetimeText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="7px"
+            android:text="12월 26일"
+            android:textColor="#000000"
+            android:textSize="25px" />
+
+        <TextView
+            android:id="@+id/notice_check"
+            android:layout_width="126dp"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="7px"
+            android:text="*공지사항*"
+            android:textColor="@android:color/holo_red_dark"
+            android:textSize="40px" />
+
+        <TextView
+            android:id="@+id/substanceText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40px"
+
+            android:ellipsize="end"
+            android:maxLines="3"
+            android:textColor="#222222"
+            android:textSize="45px"
+            android:layout_weight="1.58" />
+
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/Communicator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/Communicator.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/Communicator.java	(revision )
@@ -0,0 +1,532 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.security.cert.CertificateException;
+import java.security.cert.X509Certificate;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Iterator;
+import java.util.Locale;
+import java.util.Map;
+
+import javax.net.ssl.HostnameVerifier;
+import javax.net.ssl.HttpsURLConnection;
+import javax.net.ssl.SSLContext;
+import javax.net.ssl.SSLSession;
+import javax.net.ssl.TrustManager;
+import javax.net.ssl.X509TrustManager;
+
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+
+public class Communicator {
+	private static String webUrl = "";
+
+	public static void getHttp(String url, final Handler mHandler) {
+		final String httpUrl = webUrl + url;
+		Thread t = new Thread() {
+			public void run() {
+				String jsonString = ReadHTML(httpUrl);
+				if (jsonString == null) {
+					jsonString = "";
+				}
+
+				Message msg = mHandler.obtainMessage();
+				Bundle bundle = new Bundle();
+				bundle.putString("jsonString", jsonString);
+				msg.setData(bundle);
+				mHandler.sendMessage(msg);
+			}
+		};
+		t.start();
+	}
+
+	public void postHttp(String url, final Map<String, String> postMap, final Handler mHandler) {
+		final String httpUrl = webUrl + url;
+		Thread t = new Thread() {
+			public void run() {
+				String jsonString = HttpPostData(httpUrl, postMap);
+				if (jsonString == null) {
+					jsonString = "";
+				}
+
+				Message msg = mHandler.obtainMessage();
+				Bundle bundle = new Bundle();
+				bundle.putString("jsonString", jsonString);
+				msg.setData(bundle);
+				mHandler.sendMessage(msg);
+			}
+		};
+		t.start();
+	}
+
+	public static void postHttps(String url, final Map<String, String> postMap, final Handler mHandler) {
+		final String httpUrl = webUrl + url;
+		Thread t = new Thread() {
+			public void run() {
+				String jsonString = HttpsPostData(httpUrl, postMap);
+				if (jsonString == null) {
+					jsonString = "";
+				}
+
+				Message msg = mHandler.obtainMessage();
+				Bundle bundle = new Bundle();
+				bundle.putString("jsonString", jsonString);
+				msg.setData(bundle);
+				mHandler.sendMessage(msg);
+			}
+		};
+		t.start();
+	}
+
+	public static void getHttps(String url, final Handler mHandler) {
+		final String httpUrl = webUrl + url;
+
+
+		Thread thread = new Thread() {
+			@Override
+			public void run() {
+				String jsonString = readHTTPS(httpUrl);
+				if (jsonString == null) {
+					jsonString = "";
+				}
+
+				Message msg = mHandler.obtainMessage();
+				Bundle bundle = new Bundle();
+				bundle.putString("jsonString", jsonString);
+				msg.setData(bundle);
+				mHandler.sendMessage(msg);
+			}
+		};
+
+		thread.start();
+	}
+
+	public static void postHttps(String url, final Handler mHandler) {
+		final String httpUrl = webUrl + url;
+
+		Thread thread = new Thread() {
+			@Override
+			public void run() {
+				String jsonString = readPostHTTPS(httpUrl);
+				if (jsonString == null) {
+					jsonString = "";
+				}
+
+				Message msg = mHandler.obtainMessage();
+				Bundle bundle = new Bundle();
+				bundle.putString("jsonString", jsonString);
+				msg.setData(bundle);
+				mHandler.sendMessage(msg);
+			}
+		};
+
+		thread.start();
+	}
+
+	public static String readPostHTTPS(String address) {
+		String html = new String();
+
+		try {
+			URL url = new URL(address);
+
+			trustAllHosts();
+			HttpsURLConnection https = (HttpsURLConnection) url.openConnection();
+			https.setHostnameVerifier(DO_NOT_VERIFY);
+
+			https.setConnectTimeout(2000);
+			https.setRequestProperty("content-type", "application/x-www-form-urlencoded; charset=utf-8");
+			https.setRequestMethod("POST");
+			https.setDoInput(true);
+			https.setDoOutput(true);
+
+			if (https.getResponseCode() == HttpURLConnection.HTTP_OK) {
+				BufferedReader br = new BufferedReader(new InputStreamReader(https.getInputStream()));
+				while (true) {
+					String buf = br.readLine();
+					if (buf == null)
+						break;
+					html += buf;
+				}
+				br.close();
+				https.disconnect();
+			} else {
+				return null;
+			}
+		} catch (Exception ex) {
+			return null;
+		} finally {
+
+		}
+		return html;
+	}
+
+	public static String readHTTPS(String address) {
+
+		String html = new String();
+
+		try {
+			URL url = new URL(address);
+
+			trustAllHosts();
+			HttpsURLConnection urlConnection = (HttpsURLConnection) url.openConnection();
+			urlConnection.setHostnameVerifier(DO_NOT_VERIFY);
+
+			urlConnection.setConnectTimeout(3000);
+			urlConnection.setUseCaches(false);
+			if (urlConnection.getResponseCode() == HttpURLConnection.HTTP_OK) {
+				BufferedReader br = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
+				while (true) {
+					String buf = br.readLine();
+					if (buf == null)
+						break;
+					html += buf;
+				}
+				br.close();
+				urlConnection.disconnect();
+			} else {
+				return null;
+			}
+		} catch (Exception ex) {
+			return null;
+		} finally {
+
+		}
+		return html;
+	}
+
+	private static void trustAllHosts() {
+		// Create a trust manager that does not validate certificate chains
+		TrustManager[] trustAllCerts = new TrustManager[] { new X509TrustManager() {
+			public X509Certificate[] getAcceptedIssuers() {
+				return new X509Certificate[] {};
+			}
+
+			public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+			}
+
+			public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+			}
+		} };
+
+		// Install the all-trusting trust manager
+		try {
+			SSLContext sc = SSLContext.getInstance("TLS");
+			sc.init(null, trustAllCerts, new java.security.SecureRandom());
+			HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+	}
+
+	// always verify the host - dont check for certificate
+	final static HostnameVerifier DO_NOT_VERIFY = new HostnameVerifier() {
+		public boolean verify(String hostname, SSLSession session) {
+			return true;
+		}
+	};
+
+	private static String ReadHTML(String address) {
+		return ReadHTML(address, 2000);
+	}
+
+	private static String ReadHTML(String address, int timeout) {
+		String html = new String();
+
+		try {
+			URL url = new URL(address);
+
+			HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
+
+			if (urlConnection != null) {
+				urlConnection.setConnectTimeout(timeout);
+				urlConnection.setUseCaches(false);
+				if (urlConnection.getResponseCode() == HttpURLConnection.HTTP_OK) {
+					BufferedReader br = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
+					while (true) {
+						String buf = br.readLine();
+						if (buf == null)
+							break;
+						html += buf;
+					}
+					br.close();
+					urlConnection.disconnect();
+				} else {
+					return null;
+				}
+			} else {
+				return null;
+			}
+		} catch (Exception ex) {
+			return null;
+		} finally {
+
+		}
+
+		return html;
+	}
+
+	private String HttpPostData(String mUrl, Map<String, String> postMap) {
+		String html = new String();
+
+		try {
+			// --------------------------
+			// URL 설정하고 접속하기
+			// --------------------------
+			URL url = new URL(mUrl);
+			HttpURLConnection http = (HttpURLConnection) url.openConnection(); // 접속
+			// --------------------------
+			// 전송 모드 설정 - 기본적인 설정이다
+			// --------------------------
+			http.setDefaultUseCaches(false);
+			http.setDoInput(true); // 서버에서 읽기 모드 지정
+			http.setDoOutput(true); // 서버로 쓰기 모드 지정
+			http.setRequestMethod("POST"); // 전송 방식은 POST
+
+			// 서버에게 웹에서 <Form>으로 값이 넘어온 것과 같은 방식으로 처리하라는 걸 알려준다
+			http.setRequestProperty("content-type", "application/x-www-form-urlencoded");
+			// --------------------------
+			// 서버로 값 전송
+			// --------------------------
+			StringBuffer buffer = new StringBuffer();
+
+			Iterator<String> keyIter = postMap.keySet().iterator();
+
+			ArrayList<String> keyList = new ArrayList<String>();
+			while (keyIter.hasNext()) {
+				String keys = (String) keyIter.next();
+				keyList.add(keys);
+			}
+			for (int i = 0; i < keyList.size(); i++) {
+				String mKey = keyList.get(i);
+				String mValue = postMap.get(mKey);
+
+				if (i < (keyList.size() - 1)) {
+					buffer.append(mKey).append("=").append(mValue).append("&");
+				} else {
+					buffer.append(mKey).append("=").append(mValue);
+				}
+			}
+
+			OutputStreamWriter outStream = new OutputStreamWriter(http.getOutputStream(), "UTF-8");
+			PrintWriter writer = new PrintWriter(outStream);
+			writer.write(buffer.toString());
+			writer.flush();
+			// --------------------------
+			// 서버에서 전송받기
+			// --------------------------
+			InputStreamReader tmp = new InputStreamReader(http.getInputStream(), "UTF-8");
+			BufferedReader reader = new BufferedReader(tmp);
+			StringBuilder builder = new StringBuilder();
+			String str;
+			while ((str = reader.readLine()) != null) { // 서버에서 라인단위로 보내줄 것이므로
+				builder.append(str + "\n"); // View에 표시하기 위해 라인 구분자 추가
+			}
+			html = builder.toString(); // 전송결과를 전역 변수에 저장
+		} catch (MalformedURLException e) {
+			//
+		} catch (IOException e) {
+		} // try
+		return html;
+	}
+
+	private static String HttpsPostData(String mUrl, Map<String, String> postMap) {
+		String html = new String();
+
+		try {
+			// --------------------------
+			// URL 설정하고 접속하기
+			// --------------------------
+			URL url = new URL(mUrl);
+			trustAllHosts();
+			HttpsURLConnection https = (HttpsURLConnection) url.openConnection(); // 접속
+			https.setHostnameVerifier(DO_NOT_VERIFY);
+			// --------------------------
+			// 전송 모드 설정 - 기본적인 설정이다
+			// --------------------------
+			https.setDefaultUseCaches(false);
+			https.setDoInput(true); // 서버에서 읽기 모드 지정
+			https.setDoOutput(true); // 서버로 쓰기 모드 지정
+			https.setRequestMethod("POST"); // 전송 방식은 POST
+
+			// 서버에게 웹에서 <Form>으로 값이 넘어온 것과 같은 방식으로 처리하라는 걸 알려준다
+			https.setRequestProperty("content-type", "application/x-www-form-urlencoded");
+			// --------------------------
+			// 서버로 값 전송
+			// --------------------------
+			StringBuffer buffer = new StringBuffer();
+
+			Iterator<String> keyIter = postMap.keySet().iterator();
+
+			ArrayList<String> keyList = new ArrayList<String>();
+			while (keyIter.hasNext()) {
+				String keys = (String) keyIter.next();
+				keyList.add(keys);
+			}
+			for (int i = 0; i < keyList.size(); i++) {
+				String mKey = keyList.get(i);
+				String mValue = postMap.get(mKey);
+
+				if (i < (keyList.size() - 1)) {
+					buffer.append(mKey).append("=").append(mValue).append("&");
+				} else {
+					buffer.append(mKey).append("=").append(mValue);
+				}
+			}
+
+			OutputStreamWriter outStream = new OutputStreamWriter(https.getOutputStream(), "UTF-8");
+			PrintWriter writer = new PrintWriter(outStream);
+			writer.write(buffer.toString());
+			writer.flush();
+			// --------------------------
+			// 서버에서 전송받기
+			// --------------------------
+			InputStreamReader tmp = new InputStreamReader(https.getInputStream(), "UTF-8");
+			BufferedReader reader = new BufferedReader(tmp);
+			StringBuilder builder = new StringBuilder();
+			String str;
+			while ((str = reader.readLine()) != null) { // 서버에서 라인단위로 보내줄 것이므로
+				builder.append(str + "\n"); // View에 표시하기 위해 라인 구분자 추가
+			}
+			html = builder.toString(); // 전송결과를 전역 변수에 저장
+		} catch (MalformedURLException e) {
+			//
+		} catch (IOException e) {
+		} // try
+		return html;
+	}
+
+	public static void sendImg(String url, final String path, final Handler mHandler) {
+		final String httpUrl = webUrl + url;
+
+
+		Thread thread = new Thread() {
+			@Override
+			public void run() {
+				String jsonString = send(httpUrl, "", path);
+				if (jsonString == null) {
+					jsonString = "";
+				}
+
+				Message msg = mHandler.obtainMessage();
+				Bundle bundle = new Bundle();
+				bundle.putString("jsonString", jsonString);
+				msg.setData(bundle);
+				mHandler.sendMessage(msg);
+			}
+		};
+
+		thread.start();
+	}
+
+	private static String send(String urlString, String type, String filePath) {
+
+		int idx = filePath.lastIndexOf(".");
+		String fileType = ".jpg";
+		if (idx > 0) {
+			fileType = filePath.substring(idx);
+		}
+
+		Calendar c = Calendar.getInstance();
+		SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmssSSS", Locale.getDefault());
+		String attachmentName = df.format(c.getTime());
+		String attachmentFileName = attachmentName + fileType;
+
+		String crlf = "\r\n";
+		String twoHyphens = "--";
+		String boundary = "*****";
+		String delimiter = "\r\n--" + boundary + "\r\n";
+
+		HttpURLConnection httpUrlConnection = null;
+		URL url;
+		String response = "";
+		try {
+			url = new URL(urlString);
+
+			System.setProperty("http.keepAlive", "false");
+
+			httpUrlConnection = (HttpURLConnection) url.openConnection();
+			httpUrlConnection.setUseCaches(false);
+			httpUrlConnection.setDoOutput(true);
+
+			httpUrlConnection.setRequestMethod("POST");
+			httpUrlConnection.setRequestProperty("Connection", "Keep-Alive");
+			httpUrlConnection.setRequestProperty("Cache-Control", "no-cache");
+			httpUrlConnection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);
+			DataOutputStream request = new DataOutputStream(httpUrlConnection.getOutputStream());
+
+			request.writeBytes(delimiter);
+			request.writeBytes("Content-Disposition: form-data; name=\"type\"" + crlf);
+			request.writeBytes("Content-Type: text/plain;charset=UTF-8" + crlf);
+			request.writeBytes("Content-Length: " + type.length() + crlf);
+			request.writeBytes(crlf);
+			request.writeBytes(type);
+			request.writeBytes(delimiter);
+
+			request.writeBytes("Content-Disposition: form-data; name=uploadedfile; filename=\""
+					+ attachmentFileName + "\"" + crlf);
+			request.writeBytes(crlf);
+			// 테스트 부분
+
+			// 파일 복사 작업 시작
+			FileInputStream bis = new FileInputStream(filePath);
+
+			int bufferSize = 1024;
+			byte[] buffer = new byte[bufferSize];
+
+			// 버퍼 크기만큼 파일로부터 바이트 데이터를 읽는다.
+			// int byteRead = in.read(buffer, 0, bufferSize);
+
+			int len = 0;
+			// 전송
+			while ((len = bis.read(buffer)) != -1) {
+				request.write(buffer);
+			}
+
+			request.writeBytes(crlf);
+			request.writeBytes(twoHyphens + boundary + twoHyphens + crlf);
+			request.flush();
+			request.close();
+
+			InputStream responseStream = new BufferedInputStream(httpUrlConnection.getInputStream());
+
+			BufferedReader responseStreamReader = new BufferedReader(new InputStreamReader(responseStream));
+
+			String line = "";
+			StringBuilder stringBuilder = new StringBuilder();
+
+			while ((line = responseStreamReader.readLine()) != null) {
+				stringBuilder.append(line).append("\n");
+			}
+			responseStreamReader.close();
+
+			response = stringBuilder.toString();
+
+			responseStream.close();
+
+			httpUrlConnection.disconnect();
+		} catch (Exception e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+
+		return response;
+	}
+
+	public static String setValue(String key, String value) {
+		return "Content-Disposition: form-data; name=\"" + key + "\"r\n\r\n" + value;
+	}
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/calendar/Detail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/calendar/Detail.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/calendar/Detail.java	(revision )
@@ -0,0 +1,233 @@
+package simplesns.uiseon.com.simplesns.calendar;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.utils.URLEncodedUtils;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.params.HttpConnectionParams;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.util.ArrayList;
+import java.util.List;
+
+import simplesns.uiseon.com.simplesns.R;
+
+public class Detail extends Activity implements View.OnClickListener { // 일정목록 추가하기
+
+    MyDBHelper mDBHelper;
+
+    int mId;
+
+    String today;
+
+    String id = null;
+
+    String msgString= null;
+
+    EditText editDate, editTitle, editTime, editMemo;
+
+    String a,b,c,d;
+
+
+    /** Called when the activity is first created. */
+
+    @Override
+
+    public void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_detail);
+
+
+        Intent intent = getIntent();
+
+        id= intent.getStringExtra("id");
+
+        today = intent.getStringExtra("Param1");
+
+        editTitle = (EditText) findViewById(R.id.edittitle);
+
+        editDate = (EditText) findViewById(R.id.editdate);
+
+        editTime = (EditText) findViewById(R.id.edittime);
+
+        editMemo = (EditText) findViewById(R.id.editmemo);
+
+        editDate.setText(today);
+
+
+
+        Button btn1 = (Button) findViewById(R.id.btnsave);
+
+        btn1.setOnClickListener(this);
+
+        Button btn2 = (Button) findViewById(R.id.btndel);
+
+        btn2.setOnClickListener(this);
+
+        Button btn3 = (Button) findViewById(R.id.btncancel);
+
+        btn3.setOnClickListener(this);
+
+
+    }
+
+
+    public void comeon(String a, String b, String c, String d, String e){
+
+        HttpClient client = new DefaultHttpClient();
+        HttpConnectionParams.setConnectionTimeout(client.getParams(), 10000);
+        List<NameValuePair> list = new ArrayList<NameValuePair>();
+        list.add(new BasicNameValuePair("editTitle", a));
+        list.add(new BasicNameValuePair("editDate", b));
+        list.add(new BasicNameValuePair("editClock", c));
+        list.add(new BasicNameValuePair("editMemo", d));
+        list.add(new BasicNameValuePair("editUser", e));
+
+        Log.i("editTitle", a);
+        Log.i("editDate", b);
+        Log.i("editClock",c);
+
+        String url = "http://27.1.165.192:8082/99JSP_myEMP/usercalendaradd.jsp" + "?" + URLEncodedUtils.format(list, "UTF-8");
+//                              String url = "http://125.179.204.2:8080/AndroidServer/login.jsp?id=mygirl2&pwd=1111";
+
+        HttpGet httpGet = new HttpGet(url);
+
+        HttpResponse response = null;
+        String s ="";
+        StringBuffer sb = null;
+        try {
+            response = client.execute(httpGet);
+            HttpEntity entity = response.getEntity();
+            InputStream is;
+            BufferedReader br = null;
+            if(entity != null) {
+                is = entity.getContent();
+                br =  new BufferedReader(new InputStreamReader(is));
+                s = "";
+                sb = new StringBuffer();
+            }
+            while((s = br.readLine()) != null) {
+                sb.append(s);
+            }
+            Log.i("sb : ", sb.toString());
+            msgString = sb.toString().trim().toString();
+            Log.i("msgString : ", msgString);
+
+        } catch (ClientProtocolException e1) {
+            e1.printStackTrace();
+        } catch (IOException e2) {
+            e2.printStackTrace();
+        }
+    }
+
+    @Override
+
+    public void onClick(View v) {
+
+        a = editTitle.getText().toString();
+        b = editDate.getText().toString();
+        c = editTime.getText().toString();
+        d = editMemo.getText().toString();
+        Log.v("xxx",a);
+        Log.v("xxxx",b);
+        Log.v("xxxxx",c);
+
+
+// TODO Auto-generated method stub
+
+
+
+
+
+        switch (v.getId()) {
+
+            case R.id.btnsave:
+                comeon(a,b,c,d,id);
+                Intent intent_save = new Intent(getApplicationContext(), CalendarActivity.class);
+                intent_save.putExtra("id",id);
+                startActivity(intent_save);
+                finish(); //이따수정하기
+                break;
+//                if (mId != -1) {
+//
+//                    db.execSQL("UPDATE today SET title='"
+//
+//                            + editTitle.getText().toString() + "',date='"
+//
+//                            + editDate.getText().toString() + "', time='"
+//
+//                            + editTime.getText().toString() + "', memo='"
+//
+//                            + editMemo.getText().toString() + "' WHERE _id='" + mId
+//
+//                            + "';");
+//
+//                } else {
+//
+//                    db.execSQL("INSERT INTO today VALUES(null, '"
+//
+//                            + editTitle.getText().toString() + "', '"
+//
+//                            + editDate.getText().toString() + "', '"
+//
+//                            + editTime.getText().toString() + "', '"
+//
+//                            + editMemo.getText().toString() + "');");
+//
+//                }
+//
+//                mDBHelper.close();
+//
+//                setResult(RESULT_OK);
+//
+//                break;
+
+
+            case R.id.btndel:
+
+//                if (mId != -1) {
+//
+//                    db.execSQL("DELETE FROM today WHERE _id='" + mId + "';");
+//
+//                    mDBHelper.close();
+//
+//                }
+//
+//                setResult(RESULT_OK);
+//
+//                break;
+                break;
+
+            case R.id.btncancel:
+
+               Intent intent_cancel = new Intent(getApplicationContext(), CalendarActivity.class);
+                intent_cancel.putExtra("id",id);
+                startActivity(intent_cancel);
+                finish(); //이따수정하기
+                break;
+
+        }
+
+
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_detail.xml	(revision )
+++ app/src/main/res/layout/activity_detail.xml	(revision )
@@ -0,0 +1,95 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical" >
+
+    <LinearLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:orientation="vertical"
+        android:background="@color/colorPrimary">
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="제목" />
+
+        <EditText
+            android:id="@+id/edittitle"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center" />
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="날짜" />
+
+        <EditText
+            android:id="@+id/editdate"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:hint="년/월/일"/>
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="시간" />
+
+        <EditText
+            android:id="@+id/edittime"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="00:00" />
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="메모" />
+
+        <EditText
+            android:id="@+id/editmemo"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/btnadd"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="0"
+        android:orientation="horizontal" >
+
+        <Button
+            android:id="@+id/btnsave"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="저장" />
+
+        <Button
+            android:id="@+id/btndel"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="삭제" />
+
+        <Button
+            android:id="@+id/btncancel"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="취소" />
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/list_item_calendar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_item_calendar.xml	(revision )
+++ app/src/main/res/layout/list_item_calendar.xml	(revision )
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="#e3e3e3"
+    android:gravity="center"
+    android:orientation="vertical"
+    android:paddingBottom="17px"
+    android:paddingLeft="35px"
+    android:paddingRight="35px"
+    android:paddingTop="17px"
+    android:weightSum="1">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="#ffffff"
+        android:orientation="vertical"
+        android:padding="35px"
+        android:weightSum="1"
+        android:layout_weight="7.65">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="110px"
+            android:orientation="horizontal"
+            android:weightSum="1">
+
+            <!--<TextView-->
+            <!--android:id="@+id/board_numberText"-->
+            <!--android:layout_width="110px"-->
+            <!--android:layout_height="110px"-->
+            <!--android:text="박천권"-->
+            <!--android:textColor="#000000"-->
+            <!--android:textSize="80px"-->
+            <!--android:textStyle="bold"-->
+            <!--android:background="@drawable/people" />-->
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20px"
+                android:gravity="center_vertical"
+                android:orientation="vertical"
+                android:weightSum="1">
+
+
+                <TextView
+                    android:id="@+id/editUser"
+                    android:layout_width="134dp"
+                    android:layout_height="match_parent"
+                    android:text="박천권"
+                    android:textColor="#000000"
+                    android:textSize="50px"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/editDate"
+                    android:layout_width="93dp"
+                    android:layout_height="match_parent"
+                    android:layout_marginTop="7px"
+                    android:text="12월 26일"
+                    android:textColor="#000000"
+                    android:textSize="25px"
+                    android:layout_weight="4.71" />
+
+            </LinearLayout>
+
+
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/editMemo"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40px"
+            android:text="내용"
+            android:ellipsize="end"
+            android:maxLines="3"
+            android:textColor="#222222"
+            android:textSize="45px"
+            android:layout_weight="1.58" />
+
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/src/main/java/simplesns/uiseon/com/simplesns/MyGcmListenerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/MyGcmListenerService.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/MyGcmListenerService.java	(revision )
@@ -0,0 +1,66 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.content.Context;
+import android.content.Intent;
+import android.media.RingtoneManager;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.v4.app.NotificationCompat;
+import android.util.Log;
+
+import com.google.android.gms.gcm.GcmListenerService;
+
+/**
+ * Created by saltfactory on 6/8/15.
+ */
+public class MyGcmListenerService extends GcmListenerService {
+
+    private static final String TAG = "MyGcmListenerService";
+
+    /**
+     *
+     * @param from SenderID 값을 받아온다.
+     * @param data Set형태로 GCM으로 받은 데이터 payload이다.
+     */
+    @Override
+    public void onMessageReceived(String from, Bundle data) {
+        String title = data.getString("title");
+        String message = data.getString("message");
+
+        Log.d(TAG, "From: " + from);
+        Log.d(TAG, "Title: " + title);
+        Log.d(TAG, "Message: " + message);
+
+        // GCM으로 받은 메세지를 디바이스에 알려주는 sendNotification()을 호출한다.
+        sendNotification(title, message);
+    }
+
+
+    /**
+     * 실제 디바에스에 GCM으로부터 받은 메세지를 알려주는 함수이다. 디바이스 Notification Center에 나타난다.
+     * @param title
+     * @param message
+     */
+    private void sendNotification(String title, String message) {
+        Intent intent = new Intent(this, check.class);
+        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0 /* Request code */, intent,
+                PendingIntent.FLAG_ONE_SHOT);
+
+        Uri defaultSoundUri= RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
+        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)
+                .setSmallIcon(R.drawable.ic_stat_ic_notification)
+                .setContentTitle(title)
+                .setContentText(message)
+                .setAutoCancel(true)
+                .setSound(defaultSoundUri)
+                .setContentIntent(pendingIntent);
+
+        NotificationManager notificationManager =
+                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+
+        notificationManager.notify(0 /* ID of notification */, notificationBuilder.build());
+    }
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/UserDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/UserDTO.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/UserDTO.java	(revision )
@@ -0,0 +1,70 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+
+public class UserDTO {
+
+    private int userNumber;
+    private String type;
+    private String id;
+    private String passwd;
+    private String passwdConfirm;
+
+
+    public UserDTO(int userNumber, String type, String id, String passwd, String passwdConfirm) {
+        super();
+        this.userNumber = userNumber;
+        this.type = type;
+        this.id = id;
+        this.passwd = passwd;
+        this.passwdConfirm = passwdConfirm;
+
+    }
+
+    public UserDTO() {
+        super();
+    }
+
+    public void setUserNumber(int userNumber) {
+        this.userNumber = userNumber;
+    }
+
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public void setPasswd(String passwd) {
+        this.passwd = passwd;
+    }
+
+    public void setPasswdConfirm(String passwdConfirm) {
+        this.passwdConfirm = passwdConfirm;
+    }
+
+
+
+    public int getUserNumber() {
+        return userNumber;
+    }
+
+    public String getType() {
+        return type;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public String getPasswd() {
+        return passwd;
+    }
+
+    public String getPasswdConfirm() {
+        return passwdConfirm;
+    }
+
+
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/calendar/CalendarActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/calendar/CalendarActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/calendar/CalendarActivity.java	(revision )
@@ -0,0 +1,439 @@
+package simplesns.uiseon.com.simplesns.calendar;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.GridView;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.xmlpull.v1.XmlPullParser;
+import org.xmlpull.v1.XmlPullParserException;
+import org.xmlpull.v1.XmlPullParserFactory;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Date;
+
+
+import simplesns.uiseon.com.simplesns.R;
+import simplesns.uiseon.com.simplesns.manager.AutoLayout;
+
+
+public class CalendarActivity extends Activity implements View.OnClickListener,
+
+        AdapterView.OnItemClickListener {
+
+
+    ArrayList<String> mItems;
+
+    ArrayAdapter<String> adapter;
+
+    TextView textYear;
+    AutoLayout autoLayout = AutoLayout.GetInstance();
+    static String id= null;
+    TextView textMon;
+
+    int year, mon;
+    ArrayList<CalendarDTO> calendarList;
+    CalendarActivity.CalendarAdapter calendarAdapter;
+    ListView mainListView;
+
+    /** Called when the activity is first created. */
+
+    @Override
+
+    public void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_calendar);
+        Intent intent = getIntent();
+        id =intent.getExtras().getString("id");
+
+        textYear = (TextView) this.findViewById(R.id.edit1);
+        textMon = (TextView) this.findViewById(R.id.edit2);
+        mItems = new ArrayList<String>();
+        adapter = new ArrayAdapter<String>(this,
+                android.R.layout.simple_list_item_1, mItems);
+        GridView gird = (GridView) this.findViewById(R.id.grid1);
+        gird.setAdapter(adapter);
+        gird.setOnItemClickListener(this);
+
+        View view = (View) findViewById(android.R.id.content);
+        autoLayout.setView(view);
+
+
+        Date date = new Date();// 오늘에 날짜를 세팅 해준다.
+        year = date.getYear() + 1900;
+        mon = date.getMonth() + 1;
+        textYear.setText(year + "");
+        textMon.setText(mon + "");
+
+        fillDate(year, mon);
+
+        Log.v("qwer",year+""+mon);
+        requestGet(year,mon);
+
+
+        Button btnmove = (Button) this.findViewById(R.id.bt1);
+        btnmove.setOnClickListener(this);
+
+        mainListView = (ListView) findViewById(R.id.calendar_list_view);
+        calendarAdapter = new CalendarActivity.CalendarAdapter(this, R.layout.list_item_calendar, calendarList);
+        mainListView.setAdapter(calendarAdapter);
+    }
+
+
+    @Override
+
+    public void onClick(View arg0) {
+
+// TODO Auto-generated method stub
+
+        if (arg0.getId() == R.id.bt1) {
+
+            year = Integer.parseInt(textYear.getText().toString());
+
+            mon = Integer.parseInt(textMon.getText().toString());
+
+            fillDate(year, mon);
+
+        }
+
+
+
+
+    }
+
+
+    public void beforeMClicked(View v){
+        mon -= 1;
+        if(mon==0) {
+            mon=12; year -=1;
+        }
+        fillDate(year, mon);
+        mainListView.setAdapter(null);
+        calendarList = new ArrayList<CalendarDTO>();
+        requestGet(year,mon);
+        calendarAdapter.notifyDataSetChanged();
+        calendarAdapter = new CalendarActivity.CalendarAdapter(this, R.layout.list_item_calendar, calendarList);
+        mainListView.setAdapter(calendarAdapter);
+
+
+    }
+
+    public void nextMClicked(View v){
+        mon+= 1;
+        if(mon==13) {
+            mon=1;   year +=1;
+        }
+        fillDate(year, mon);
+        mainListView.setAdapter(null);
+        calendarList = new ArrayList<CalendarDTO>();
+        requestGet(year,mon);
+        calendarAdapter.notifyDataSetChanged();
+        calendarAdapter = new CalendarActivity.CalendarAdapter(this, R.layout.list_item_calendar, calendarList);
+        mainListView.setAdapter(calendarAdapter);
+    }
+
+
+
+
+    private void fillDate(int year, int mon) {
+
+        String Y = Integer.toString(year);
+        String M = Integer.toString(mon);
+
+        mItems.clear();
+        mItems.add(" ");
+        mItems.add(Y.substring(0,2));
+        mItems.add(Y.substring(2,4));
+        mItems.add("년");
+        mItems.add(M);
+        mItems.add("월");
+        mItems.add(" ");
+
+        mItems.add("일");
+
+        mItems.add("월");
+
+        mItems.add("화");
+
+        mItems.add("수");
+
+        mItems.add("목");
+
+        mItems.add("금");
+
+        mItems.add("토");
+
+
+        Date current = new Date(year - 1900, mon - 1, 1);
+        int day = current.getDay(); // 요일도 int로 저장.
+
+        for (int i = 0; i < day; i++) {
+
+            mItems.add("");
+
+        }
+
+
+        current.setDate(32);// 32일까지 입력하면 1일로 바꿔준다.
+
+        int last = 32 - current.getDate();
+
+
+
+
+        for (int i = 1; i <= last; i++) {
+
+            mItems.add(i + "");
+
+        }
+
+        adapter.notifyDataSetChanged();
+
+
+
+
+    }
+
+
+
+
+    @Override
+
+    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
+
+// TODO Auto-generated method stub
+
+        if (mItems.get(arg2).equals("")) {
+            ;
+        } else {
+
+            Intent intent = new Intent(this, Detail.class);//해당 일을 눌렸을때
+
+            intent.putExtra("Param1", textYear.getText().toString() + "/"
+
+                    + textMon.getText().toString() + "/" + mItems.get(arg2));
+            intent.putExtra("id",id);
+
+            startActivity(intent);
+
+        }
+
+    }
+
+    public void requestGet(int year, int mon) {
+        String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/usercalendarselect.jsp"+"?year="+year+"&mon="+mon;
+        Log.i("xxx", "requestGet start");
+        Log.i("xxx",year+" sss"+mon);
+        try {
+            //1.
+            HttpClient client = new DefaultHttpClient();
+
+            HttpGet get = new HttpGet(requestURL);
+            //2. 요청
+            HttpResponse response = client.execute(get);
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+            getXML(is);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        }
+    }//end requestGet()
+    public void getXML(InputStream is) {
+        calendarList = new ArrayList<CalendarDTO>();
+
+        Log.i("xxx", "getXML start!");
+        try {
+            XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
+            XmlPullParser parser = factory.newPullParser();
+            parser.setInput(is, "UTF-8");
+            int eventType = parser.getEventType();
+            CalendarDTO dto = null;
+            while( eventType != XmlPullParser.END_DOCUMENT) {
+                switch(eventType) {
+                    case XmlPullParser.START_TAG:
+                        String startTag = parser.getName();
+                        if(startTag.equals("record")){ dto = new CalendarDTO(); }
+                        if(dto !=null ) {
+
+
+                            if(startTag.equals("schNumber")){ dto.setSchNumber(Integer.parseInt(parser.nextText()));}
+                            if(startTag.equals("editTitle")){ dto.setEditTitle(parser.nextText()); }
+                            if(startTag.equals("editDate")){ dto.setEditDate(parser.nextText()); }
+                            if(startTag.equals("editClock")){ dto.setEditClock(parser.nextText()); }
+                            if(startTag.equals("editMemo")){ dto.setEditMemo(parser.nextText()); }
+                            if(startTag.equals("editUser")){ dto.setEditUser(parser.nextText()); }
+                        } else { Log.i("xxx", "dto = null"); }
+                        break;
+                    case XmlPullParser.END_TAG:
+                        String endTag = parser.getName();
+                        if(endTag.equals("record")){
+                            calendarList.add(dto);
+                        }
+                }//end switch
+                eventType = parser.next();
+            }//end while
+            for( CalendarDTO xx : calendarList){
+                Log.i("xxx",xx.getEditDate()+" "+xx.getEditMemo()+" ");
+            }
+        } catch (XmlPullParserException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        } catch (IOException ie) {
+            // TODO Auto-generated catch block
+            ie.printStackTrace();
+        }
+
+        calendarAdapter.notifyDataSetChanged();
+    }
+
+     class CalendarDTO {
+
+        private int schNumber;
+        private String editTitle;
+        private String editDate;
+        private String editClock;
+        private String editMemo;
+        private String editUser;
+
+
+        CalendarDTO(int schNumber, String editTitle, String editDate, String editClock, String editMemo,String editUser) {
+            super();
+            this.schNumber = schNumber;
+            this.editTitle = editTitle;
+            this.editDate = editDate;
+            this.editClock= editClock;
+            this.editMemo=editMemo;
+            this.editUser = editUser;
+        }
+
+         CalendarDTO() {
+            super();
+        }
+
+
+
+
+        public int getSchNumber() {
+            return schNumber;
+        }
+
+        public String getEditTitle() {
+            return editTitle;
+        }
+
+        public String getEditDate() {
+            return editDate;
+        }
+
+        public String getEditClock() {
+            return editClock;
+        }
+
+        public String getEditUser() {
+            return editUser;
+        }
+
+        public String getEditMemo(){
+            return editMemo;
+        }
+         public void setSchNumber(int schNumber) {
+             this.schNumber = schNumber;
+         }
+
+         public void setEditTitle(String editTitle) {
+             this.editTitle = editTitle;
+         }
+
+         public void setEditDate(String editDate)  {this.editDate = editDate;}
+
+         public void setEditClock(String editClock) {
+             this.editClock = editClock;
+         }
+
+         public void setEditMemo(String editMemo) {
+             this.editMemo = editMemo;
+         }
+         public void setEditUser(String editUser) {this.editUser = editUser;}
+    }
+    class CalendarAdapter extends ArrayAdapter<CalendarDTO> {
+
+
+        ArrayList<CalendarDTO> items;
+
+
+        public CalendarAdapter(Context context, int textViewResourceId , ArrayList<CalendarDTO> items) {
+            super(context,textViewResourceId,items);
+            this.items =items;
+        }
+
+
+        public View getView(int position, View convertView, ViewGroup parent) {
+            View v = convertView;
+            if (v == null) {
+                LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                v = vi.inflate(R.layout.list_item_calendar, null);
+                autoLayout.setView(v);
+            }
+
+
+            CalendarDTO calendarDTO = items.get(position);
+
+            if (calendarDTO != null) {
+
+//                TextView schNumberTextView = (TextView) v.findViewById(R.id.board_numberText);
+//                board_numberTextView.setText(Integer.toString(calendarDTO.getSchNumber()));
+
+
+                TextView editDateTextView = (TextView) v.findViewById(R.id.editDate);
+                editDateTextView.setText(calendarDTO.getEditDate()+" "+calendarDTO.getEditClock());
+
+
+                TextView editMemo = (TextView) v.findViewById(R.id.editMemo);
+                editMemo.setText(calendarDTO.getEditMemo());
+
+                TextView editUser = (TextView) v.findViewById(R.id.editUser);
+                editUser.setText(calendarDTO.getEditUser());
+
+
+
+
+            }
+            return v;
+        }
+    }
+    protected void onResume() {
+        super.onResume();
+        if(android.os.Build.VERSION.SDK_INT > 9) {
+            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+            StrictMode.setThreadPolicy(policy);
+        }
+        requestGet(year,mon);
+       calendarAdapter.notifyDataSetChanged();
+
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/main.xml	(revision )
+++ app/src/main/res/layout/main.xml	(revision )
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical"
+    android:weightSum="1">
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+        android:background="#ed664c"
+        android:gravity="center_vertical"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginLeft="25px"
+            android:layout_weight="1"
+            android:gravity="center_vertical|left"
+            android:text="Com SSa"
+            android:textColor="#ffffff"
+            android:textSize="55px"
+            android:textStyle="bold" />
+
+
+    </LinearLayout>
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="0.10"
+        android:weightSum="1">
+
+        <TextView
+            android:text="@string/login_id"
+            android:layout_width="100dip"
+            android:layout_height="wrap_content"
+            tools:textColor="@color/colorAccent"
+            android:textAllCaps="false"
+            android:textColor="@android:color/black"
+            android:textSize="24sp" />
+
+        <EditText
+            android:id="@+id/edit_id"
+            android:inputType="text"
+            android:layout_width="200dip"
+            android:layout_weight="0.54"
+            android:layout_height="76dp"
+            android:textSize="24sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="0.13"
+        android:weightSum="1">
+        <TextView
+            android:text="@string/login_pw"
+            android:layout_width="84dp"
+            android:layout_height="wrap_content"
+            android:textColor="@android:color/black"
+            android:textSize="24sp"
+            android:layout_weight="0.26" />
+
+        <EditText
+            android:id="@+id/edit_pw"
+            android:inputType="textPassword"
+            android:layout_width="200dip"
+            android:layout_height="72dp"
+            android:layout_weight="0.55"
+            android:textSize="24sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center_horizontal"
+        >
+        <Button
+            android:id="@+id/btn_login"
+            android:layout_width="100dip"
+            android:layout_height="wrap_content"
+            android:text="@string/login_btn"
+            />
+
+        <Button
+            android:id="@+id/btn_join"
+            android:layout_width="100dip"
+            android:layout_height="wrap_content"
+            android:text="@string/join_btn"
+            />
+    </LinearLayout>
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/JoinActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/JoinActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/JoinActivity.java	(revision )
@@ -0,0 +1,134 @@
+package simplesns.uiseon.com.simplesns;
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.utils.URLEncodedUtils;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+
+public class JoinActivity extends Activity {
+
+    Button btnDone ,btnCancel;
+    EditText etName,etType,etID,etPassword,etPasswordConfirm;
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.join);
+
+        etName = (EditText)findViewById(R.id.etName);
+        etType = (EditText)findViewById(R.id.etType);
+        etID = (EditText)findViewById(R.id.etID);
+        etPassword= (EditText)findViewById(R.id.etPassword);
+        etPasswordConfirm= (EditText)findViewById(R.id.etPasswordConfirm);
+
+//ㅁㅁㅁㅁㅁㅁ
+        btnDone= (Button) findViewById(R.id.btnDone);
+        btnDone.setOnClickListener(new View.OnClickListener() {
+
+            public void onClick(View v) {
+
+
+                if(etName.getText().length() == 0 || etType.getText().length() == 0  || etID.getText().length() == 0  || etPassword.getText().length() == 0  || etPasswordConfirm.getText().length() == 0 ) {
+                    Toast.makeText(JoinActivity.this, "빈 칸을 입력해주세요", Toast.LENGTH_LONG).show();
+                    Intent intent = new Intent(getApplicationContext(), JoinActivity.class);
+                    startActivity(intent);
+                    finish();
+                }
+
+
+
+                else{
+
+                    String name = etName.getText().toString();
+                    String type =   etType.getText().toString();
+                    String id =  etID.getText().toString();
+                    String passwd  = etPassword.getText().toString();
+                    String passwdConfirm = etPasswordConfirm.getText().toString();
+
+                    if(!passwd.equals(passwdConfirm)){
+                        Toast.makeText(JoinActivity.this, "비밀번호가 일치하지 않습니다.", Toast.LENGTH_LONG).show();
+                        Intent intent = new Intent(getApplicationContext(), JoinActivity.class);
+                        startActivity(intent);
+                        finish();
+                    }
+
+                    String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/userinsertdo2.jsp";
+                    InputStream is= requestGet(requestURL,name,type,id,passwd,passwdConfirm);
+
+
+                    if(android.os.Build.VERSION.SDK_INT > 9) {
+
+                        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+                        StrictMode.setThreadPolicy(policy);
+
+                    }
+                    finish(); }
+            }
+        });//end onClick()
+        btnCancel= (Button) findViewById(R.id.btnCancel);
+        btnCancel.setOnClickListener(new View.OnClickListener() {
+
+            public void onClick(View v) {
+
+                Intent intent2 = new Intent(getApplicationContext(), MainActivity.class);
+                startActivity(intent2);
+            }
+        });//end onClick()
+
+    }
+
+    public InputStream requestGet(String requestURL, String name, String type, String id, String passwd, String passwdConfirm) {
+
+        Log.i("xxx", "requestGet start");
+        try {
+            if(android.os.Build.VERSION.SDK_INT > 9) {
+
+                StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+
+                StrictMode.setThreadPolicy(policy);
+
+            }
+
+            //1.
+            HttpClient client = new DefaultHttpClient();
+
+            //폼데이터 저장
+            List<NameValuePair> dataList = new ArrayList<NameValuePair>();
+            dataList.add(new BasicNameValuePair("name", name));
+            dataList.add(new BasicNameValuePair("type", type));
+            dataList.add(new BasicNameValuePair("id", id));
+            dataList.add(new BasicNameValuePair("passwd", passwd));
+            dataList.add(new BasicNameValuePair("passwdConfirm", passwdConfirm));
+            requestURL = requestURL + "?" + URLEncodedUtils.format(dataList, "UTF-8");
+
+            HttpGet get = new HttpGet(requestURL);
+
+            //2. 요청
+            HttpResponse response = client.execute(get);
+
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+            return is;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }//end requestGet()
+}
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/QuickstartPreferences.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/QuickstartPreferences.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/QuickstartPreferences.java	(revision )
@@ -0,0 +1,12 @@
+package simplesns.uiseon.com.simplesns;
+
+/**
+ * Created by saltfactory on 6/8/15.
+ */
+public class QuickstartPreferences {
+
+    public static final String REGISTRATION_READY = "registrationReady";
+    public static final String REGISTRATION_GENERATING = "registrationGenerating";
+    public static final String REGISTRATION_COMPLETE = "registrationComplete";
+
+}
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/UserAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/UserAdapter.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/UserAdapter.java	(revision )
@@ -0,0 +1,67 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.TextView;
+
+import java.util.ArrayList;
+
+import simplesns.uiseon.com.simplesns.R;
+
+public class UserAdapter extends BaseAdapter {
+
+    Context ctx;
+    ArrayList<UserDTO> list;
+    int layout;
+    LayoutInflater inf;
+
+    public UserAdapter(Context ctx, ArrayList<UserDTO> list, int layout) {
+        super();
+        this.ctx = ctx;
+        this.list = list;
+        this.layout = layout;
+        inf = (LayoutInflater)ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+    }
+
+    public int getCount() {
+        // TODO Auto-generated method stub
+        return list.size();
+    }
+
+    public Object getItem(int position) {
+        // TODO Auto-generated method stub
+        return list.get(position);
+    }
+
+    public long getItemId(int position) {
+        // TODO Auto-generated method stub
+        return position;
+    }
+
+    public View getView(int position, View convertView, ViewGroup parent) {
+        // TODO Auto-generated method stub
+        if(convertView == null) { convertView = inf.inflate(layout, null); }
+
+
+
+        TextView txt_userNumber = (TextView)convertView.findViewById(R.id.txt_userNumber);
+        TextView txt_type = (TextView)convertView.findViewById(R.id.txt_type);
+        TextView txt_id = (TextView)convertView.findViewById(R.id.txt_id);
+        TextView txt_passwd = (TextView)convertView.findViewById(R.id.txt_passwd);
+        TextView txt_passwdConfirm= (TextView)convertView.findViewById(R.id.txt_passwdConfirm);
+
+        txt_userNumber.setText("userNumber : "+list.get(position).getUserNumber());
+        txt_type.setText("type : "+list.get(position).getType());
+        txt_id.setText("id : "+list.get(position).getId());
+        txt_passwd.setText("passwd : "+list.get(position).getPasswd());
+        txt_passwdConfirm.setText("passwdConfirm : "+list.get(position).getPasswdConfirm());
+
+
+        return convertView;
+    }
+
+}
Index: app/src/main/res/layout/activity_calendar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_calendar.xml	(revision )
+++ app/src/main/res/layout/activity_calendar.xml	(revision )
@@ -0,0 +1,142 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="fill_parent"
+
+    android:layout_height="fill_parent"
+
+    android:orientation="vertical" >
+
+
+
+
+    <LinearLayout
+
+        android:layout_width="fill_parent"
+
+        android:layout_height="wrap_content"
+
+        android:layout_weight="0"
+
+        android:gravity="center"
+
+        android:orientation="horizontal" >
+
+
+        <ImageView
+            android:background="@drawable/beforem"
+            android:id="@+id/imageView"
+            android:layout_width="50dp"
+            android:layout_height="30dp"
+            android:onClick="beforeMClicked" />
+
+        <EditText
+
+            android:id="@+id/edit1"
+
+            android:layout_width="wrap_content"
+
+            android:layout_height="wrap_content"
+
+            android:hint="년도 입력" />
+
+
+
+
+        <TextView
+
+            android:layout_width="wrap_content"
+
+            android:layout_height="wrap_content"
+
+            android:hint="년" />
+
+
+
+
+        <EditText
+
+            android:id="@+id/edit2"
+
+            android:layout_width="wrap_content"
+
+            android:layout_height="wrap_content"
+
+            android:hint="월을 입력" />
+
+
+
+
+        <TextView
+
+            android:layout_width="wrap_content"
+
+            android:layout_height="wrap_content"
+
+            android:hint="월" />
+
+
+        <Button
+
+            android:id="@+id/bt1"
+
+            android:layout_width="wrap_content"
+
+            android:layout_height="wrap_content"
+
+            android:hint="클릭" />
+
+        <ImageView
+            android:background="@drawable/nextm"
+            android:id="@+id/imageView2"
+            android:layout_width="50dp"
+            android:layout_height="30dp"
+            android:onClick="nextMClicked" />
+
+    </LinearLayout>
+
+
+    <LinearLayout
+
+        android:layout_width="fill_parent"
+
+        android:layout_height="wrap_content"
+
+        android:layout_weight="1"
+
+        android:orientation="vertical"
+        android:background="@color/colorPrimary"
+        android:weightSum="1">
+
+
+
+
+        <GridView
+
+            android:id="@+id/grid1"
+
+            android:layout_width="fill_parent"
+
+            android:layout_height="267dp"
+
+            android:gravity="center"
+
+            android:numColumns="7"
+            android:layout_weight="1.02">
+
+        </GridView>
+
+        <ListView
+            android:id="@+id/calendar_list_view"
+            android:layout_width="match_parent"
+            android:background="#e3e3e3"
+            android:paddingTop="17px"
+            android:paddingBottom="17px"
+            android:layout_height="167dp">
+        </ListView>
+    </LinearLayout>
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/calendar/MyDBHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/calendar/MyDBHelper.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/calendar/MyDBHelper.java	(revision )
@@ -0,0 +1,63 @@
+package simplesns.uiseon.com.simplesns.calendar;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+public class MyDBHelper extends SQLiteOpenHelper {  //데이터베이스 클래스
+
+
+
+
+    public MyDBHelper(Context context, String name, SQLiteDatabase.CursorFactory factory,
+
+                      int version) {
+
+        super(context, name, factory, version);
+
+// TODO Auto-generated constructor stub
+
+    }
+
+
+
+
+    @Override
+
+    public void onCreate(SQLiteDatabase db) {
+
+// TODO Auto-generated method stub
+
+
+
+
+        db.execSQL("CREATE TABLE today(_id INTEGER PRIMARY KEY AUTOINCREMENT, "
+
+                + "title TEXT, " + "date TEXT , " + "time TEXT, "
+
+                + "memo TEXT );");
+
+
+
+
+    }
+
+
+
+
+    @Override
+
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+
+// TODO Auto-generated method stub
+
+        db.execSQL("DROP TABLE IF EXIST today;");
+
+        onCreate(db);
+
+    }
+
+
+
+
+}
Index: app/src/main/res/layout/activity_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_view.xml	(revision )
+++ app/src/main/res/layout/activity_view.xml	(revision )
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#ffffff"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+        android:gravity="center_vertical">
+
+
+        <Button
+            android:id="@+id/back_btn"
+            android:layout_width="195px"
+            android:layout_height="90px"
+            android:layout_marginLeft="25px"
+            android:background="#ed664c"
+            android:gravity="center"
+            android:text="뒤로"
+            android:textColor="#ffffff"
+            android:textSize="45px" />
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginRight="220px"
+            android:gravity="center"
+            android:text="이야기"
+            android:textColor="#000000"
+            android:textSize="50px"
+            android:textStyle="bold" />
+
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="1px"
+        android:background="#cfcfcf">
+
+    </LinearLayout>
+
+    <ListView
+        android:id="@+id/listView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_weight="1">
+    </ListView>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="1px"
+        android:background="#cfcfcf">
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+        android:gravity="center_vertical"
+        android:orientation="horizontal">
+
+
+        <EditText
+            android:id="@+id/commentEditText"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginLeft="45px"
+
+            android:layout_weight="1"
+            android:gravity="center_vertical"
+            android:hint="댓글을 입력하세요."
+            android:textColor="#000000"
+            android:textColorHint="#cfcfcf"
+            android:textSize="45px" />
+
+        <Button
+            android:id="@+id/send_btn"
+            android:layout_width="175px"
+            android:layout_height="90px"
+            android:layout_marginLeft="45px"
+            android:layout_marginRight="45px"
+            android:background="#ed664c"
+            android:gravity="center"
+            android:text="전송"
+            android:textColor="#ffffff"
+            android:textSize="45px" />
+    </LinearLayout>
+</LinearLayout>
Index: app/settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/settings.xml	(revision )
+++ app/settings.xml	(revision )
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<settings xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd'
+          xmlns='http://maven.apache.org/SETTINGS/1.0.0' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
+    
+    <profiles>
+        <profile>
+            <repositories>
+                <repository>
+                    <snapshots>
+                        <enabled>false</enabled>
+                    </snapshots>
+                    <id>bintray-android-android-tools</id>
+                    <name>bintray</name>
+                    <url>http://dl.bintray.com/android/android-tools</url>
+                </repository>
+            </repositories>
+            <pluginRepositories>
+                <pluginRepository>
+                    <snapshots>
+                        <enabled>false</enabled>
+                    </snapshots>
+                    <id>bintray-android-android-tools</id>
+                    <name>bintray-plugins</name>
+                    <url>http://dl.bintray.com/android/android-tools</url>
+                </pluginRepository>
+            </pluginRepositories>
+            <id>bintray</id>
+        </profile>
+    </profiles>
+    <activeProfiles>
+        <activeProfile>bintray</activeProfile>
+    </activeProfiles>
+</settings>
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,10 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="android:textColor">@android:color/white</item>
+        <item name="android:textSize">16sp</item>
+    </style>
+
+</resources>
Index: app/src/main/res/layout/noticeview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/noticeview.xml	(revision )
+++ app/src/main/res/layout/noticeview.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:weightSum="1">
+
+
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+        android:gravity="center_vertical">
+
+
+        <Button
+            android:id="@+id/back_btn"
+            android:layout_width="195px"
+            android:layout_height="90px"
+            android:layout_marginLeft="25px"
+            android:gravity="center"
+            android:text="뒤로"
+            android:textColor="#ffffff"
+            android:textSize="45px"
+            android:background="#ed664c" />
+
+        <Button
+            android:text="Logout"
+            android:layout_width="80dp"
+            android:layout_height="25dp"
+            android:id="@+id/logoutBtn"
+            android:layout_marginStart="180dp"
+            android:textSize="5sp" />
+
+    </LinearLayout>
+
+    <ListView
+        android:id="@+id/main_list_view"
+        android:layout_width="match_parent"
+        android:background="#fefefe"
+        android:paddingTop="17px"
+        android:paddingBottom="17px"
+        android:layout_height="match_parent">
+    </ListView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="blue_grey_500">#607D8B</color>
+    <color name="blue_grey_600">#546E7A</color>
+    <color name="blue_grey_700">#455A64</color>
+    <color name="blue_grey_800">#37474F</color>
+    <color name="blue_grey_900">#263238</color>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303f9f</color>
+    <color name="colorAccent">#020202</color>
+</resources>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/RegistrationIntentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/RegistrationIntentService.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/RegistrationIntentService.java	(revision )
@@ -0,0 +1,61 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.annotation.SuppressLint;
+import android.app.IntentService;
+import android.content.Intent;
+import android.support.v4.content.LocalBroadcastManager;
+import android.util.Log;
+
+import com.google.android.gms.gcm.GoogleCloudMessaging;
+import com.google.android.gms.iid.InstanceID;
+import simplesns.uiseon.com.simplesns.R;
+import java.io.IOException;
+
+/**
+ * Created by saltfactory on 6/8/15.
+ */
+public class RegistrationIntentService extends IntentService {
+
+    private static final String TAG = "RegistrationIntentService";
+
+    public RegistrationIntentService() {
+        super(TAG);
+    }
+
+    /**
+     * GCM을 위한 Instance ID의 토큰을 생성하여 가져온다.
+     * @param intent
+     */
+    @SuppressLint("LongLogTag")
+    @Override
+    protected void onHandleIntent(Intent intent) {
+
+        // GCM Instance ID의 토큰을 가져오는 작업이 시작되면 LocalBoardcast로 GENERATING 액션을 알려 ProgressBar가 동작하도록 한다.
+        LocalBroadcastManager.getInstance(this)
+                .sendBroadcast(new Intent(QuickstartPreferences.REGISTRATION_GENERATING));
+
+        // GCM을 위한 Instance ID를 가져온다.
+        InstanceID instanceID = InstanceID.getInstance(this);
+        String token = null;
+        try {
+            synchronized (TAG) {
+                // GCM 앱을 등록하고 획득한 설정파일인 google-services.json을 기반으로 SenderID를 자동으로 가져온다.
+                String default_senderId = getString(R.string.gcm_defaultSenderId);
+                // GCM 기본 scope는 "GCM"이다.
+                String scope = GoogleCloudMessaging.INSTANCE_ID_SCOPE;
+                // Instance ID에 해당하는 토큰을 생성하여 가져온다.
+                token = instanceID.getToken(default_senderId, scope, null);
+
+                Log.i(TAG, "GCM Registration Token: " + token);
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        // GCM Instance ID에 해당하는 토큰을 획득하면 LocalBoardcast에 COMPLETE 액션을 알린다.
+        // 이때 토큰을 함께 넘겨주어서 UI에 토큰 정보를 활용할 수 있도록 했다.
+        Intent registrationComplete = new Intent(QuickstartPreferences.REGISTRATION_COMPLETE);
+        registrationComplete.putExtra("token", token);
+        LocalBroadcastManager.getInstance(this).sendBroadcast(registrationComplete);
+    }
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/BoardDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/BoardDTO.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/BoardDTO.java	(revision )
@@ -0,0 +1,71 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+
+public class BoardDTO {
+
+    private int board_number;
+    private String substance;
+    private String write_user_id;
+    private String notice_check;
+    private String datetime;
+    private String name;
+
+    public BoardDTO(int board_number, String substance, String write_user_id, String notice_check, String datetime, String name) {
+        super();
+        this.board_number = board_number;
+        this.substance = substance;
+        this.write_user_id = write_user_id;
+        this.notice_check = notice_check;
+        this.datetime = datetime;
+        this.name = name;
+    }
+
+    public BoardDTO() {
+        super();
+    }
+
+    public void setBoard_number(int board_number) {
+        this.board_number = board_number;
+    }
+
+    public void setSubstance(String substance) {
+        this.substance = substance;
+    }
+
+    public void setWrite_user_id(String write_user_id) {
+        this.write_user_id = write_user_id;
+    }
+
+    public void setNotice_check(String notice_check) {
+        this.notice_check = notice_check;
+    }
+
+    public void setDatetime(String datetime) {
+        this.datetime = datetime;
+    }
+    public void setName(String name) {this.name = name;}
+
+    public int getBoard_number() {
+        return board_number;
+    }
+
+    public String getSubstance() {
+        return substance;
+    }
+
+    public String getWrite_user_id() {
+        return write_user_id;
+    }
+
+    public String getNotice_check() {
+        return notice_check;
+    }
+
+    public String getDatetime() {
+        return datetime;
+    }
+
+
+    public String getName(){return name;}
+
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/calendar/ExToday.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/calendar/ExToday.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/calendar/ExToday.java	(revision )
@@ -0,0 +1,208 @@
+package simplesns.uiseon.com.simplesns.calendar;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.Button;
+import android.widget.ListView;
+import android.widget.SimpleCursorAdapter;
+import android.widget.TextView;
+
+import simplesns.uiseon.com.simplesns.R;
+
+public class ExToday extends Activity implements AdapterView.OnItemClickListener,
+
+        View.OnClickListener { //오늘의 일정 목록 띄우기
+
+    MyDBHelper mDBHelper;
+
+    String today;
+
+    Cursor cursor;
+
+    SimpleCursorAdapter adapter;
+
+    ListView list;
+
+    String msgString = null;
+
+    String id = null;
+
+
+
+
+
+
+    /** Called when the activity is first created. */
+
+    @Override
+
+    public void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_ex_today);
+
+
+
+
+        Intent intent = getIntent();
+
+        today = intent.getStringExtra("Param1");
+
+        id = intent.getExtras().getString("id");
+
+
+
+
+        TextView text = (TextView) findViewById(R.id.texttoday);
+
+        text.setText(today);
+
+
+
+//
+//
+//
+//        mDBHelper = new MyDBHelper(this, "Today.db", null, 1);
+//
+//        SQLiteDatabase db = mDBHelper.getWritableDatabase();
+//
+//
+//
+//
+//        cursor = db.rawQuery(
+//
+//        "SELECT * FROM today WHERE date = '" + today + "'", null);
+//
+//
+//
+//
+//        adapter = new SimpleCursorAdapter(this,
+//
+//                android.R.layout.simple_list_item_2, cursor, new String[] {
+//
+//                "title", "time" }, new int[] { android.R.id.text1,
+//
+//                android.R.id.text2 });
+//
+//
+//
+//
+//        ListView list = (ListView) findViewById(R.id.list1);
+//
+//        list.setAdapter(adapter);
+//
+//        list.setOnItemClickListener(this);
+//
+//
+//
+//
+//        mDBHelper.close();
+
+
+
+
+        Button btn = (Button) findViewById(R.id.btnadd);
+
+        btn.setOnClickListener(this);
+
+
+
+
+    }
+
+
+
+
+
+
+
+
+
+
+
+    @Override
+
+    public void onItemClick(AdapterView<?> parent, View view, int position,
+
+                            long id) {
+
+// TODO Auto-generated method stub
+
+        Intent intent = new Intent(this, Detail.class);
+
+        cursor.moveToPosition(position);
+
+        intent.putExtra("ParamID", cursor.getInt(0));
+
+        intent.putExtra("id",id);
+
+        startActivityForResult(intent, 0);
+
+    }
+
+
+
+
+    @Override
+
+    public void onClick(View v) {
+
+// TODO Auto-generated method stub
+
+        Intent intent = new Intent(this, Detail.class);
+
+        intent.putExtra("ParamDate", today);
+
+        startActivityForResult(intent, 1);
+
+
+
+
+    }
+
+
+
+
+    @Override
+
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+
+// TODO Auto-generated method stub
+
+// super.onActivityResult(requestCode, resultCode, data);
+
+        switch (requestCode) {
+
+            case 0:
+
+            case 1:
+
+                if (resultCode == RESULT_OK) {
+
+// adapter.notifyDataSetChanged();
+
+                    SQLiteDatabase db = mDBHelper.getWritableDatabase();
+
+                    cursor = db.rawQuery("SELECT * FROM today WHERE date = '"
+
+                            + today + "'", null);
+
+                    adapter.changeCursor(cursor);
+
+                    mDBHelper.close();
+
+                }
+
+                break;
+
+        }
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/mainview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/mainview.xml	(revision )
+++ app/src/main/res/layout/mainview.xml	(revision )
@@ -0,0 +1,111 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:weightSum="1">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+        android:background="#ed664c"
+        android:gravity="center_vertical"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginLeft="25px"
+            android:layout_weight="1"
+            android:gravity="center_vertical|left"
+            android:text="Com SSa"
+            android:textColor="#ffffff"
+            android:textSize="55px"
+            android:textStyle="bold" />
+
+        <Button
+            android:text="logout"
+            android:id="@+id/logoutBtn"
+            android:onClick="logoutClicked"
+            android:layout_width="80dp"
+            android:layout_height="25dp"
+            android:textSize="5sp" />
+
+        <Button
+            android:id="@+id/main_button"
+            android:layout_marginRight="25px"
+            android:gravity="center"
+            android:text="Write"
+            android:textColor="#ffffff"
+            android:textSize="5sp"
+            android:layout_width="80dp"
+            android:layout_height="25dp" />
+
+    </LinearLayout>
+
+    <ListView
+        android:id="@+id/main_list_view"
+        android:layout_width="match_parent"
+        android:background="#fefefe"
+        android:paddingTop="17px"
+        android:paddingBottom="17px"
+        android:layout_height="418dp"
+        android:layout_weight="1">
+    </ListView>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:background="#fefefe"
+        android:layout_height="33dp">
+
+
+        <ImageView
+
+            android:id="@+id/NoticePart"
+            android:layout_height="35dp"
+            android:background="@drawable/notice"
+            android:layout_marginRight="80dp"
+            android:layout_width="35dp"
+            android:onClick="noticeClicked"
+            android:layout_marginStart="41dp"
+            android:layout_alignParentTop="true"
+            android:layout_alignParentStart="true" />
+
+        <ImageView
+            android:layout_width="35dp"
+            android:layout_height="35dp"
+            android:background="@drawable/check"
+            android:id="@+id/check"
+            android:onClick="checkClicked"
+            android:layout_marginEnd="34dp"
+            android:layout_alignParentTop="true"
+            android:layout_alignParentEnd="true" />
+
+        <ImageView
+
+            android:id="@+id/CommunityPart"
+            android:background="@drawable/community"
+            android:layout_marginRight="80dp"
+            android:layout_width="35dp"
+            android:layout_height="35dp"
+            android:onClick="refreshClicked"
+            android:layout_marginEnd="50dp"
+            android:layout_alignParentTop="true"
+            android:layout_toStartOf="@+id/check" />
+
+        <ImageView
+            android:orientation="horizontal"
+            android:id="@+id/CalendarPart"
+            android:background="@drawable/calendar"
+            android:layout_width="35dp"
+            android:layout_height="35dp"
+            android:onClick="calendarClicked"
+            android:layout_marginStart="45dp"
+            android:layout_alignParentTop="true"
+            android:layout_toEndOf="@+id/NoticePart" />
+
+    </RelativeLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_ex_today.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_ex_today.xml	(revision )
+++ app/src/main/res/layout/activity_ex_today.xml	(revision )
@@ -0,0 +1,94 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+
+    android:layout_width="fill_parent"
+
+    android:layout_height="fill_parent"
+
+    android:orientation="vertical" >
+
+
+
+
+    <LinearLayout
+
+        android:layout_width="fill_parent"
+
+        android:layout_height="wrap_content"
+
+        android:layout_weight="0"
+
+        android:orientation="horizontal" >
+
+
+
+
+        <TextView
+
+            android:id="@+id/texttoday"
+
+            android:layout_width="fill_parent"
+
+            android:layout_height="wrap_content"
+
+            android:gravity="center"
+
+            android:text="일정 관리" />
+
+    </LinearLayout>
+
+
+
+
+    <LinearLayout
+
+        android:layout_width="fill_parent"
+
+        android:layout_height="wrap_content"
+
+        android:layout_weight="1"
+
+        android:orientation="vertical"
+        android:background="@color/colorPrimary">
+
+
+        <ListView
+
+            android:id="@+id/list1"
+
+            android:layout_width="fill_parent"
+
+            android:layout_height="wrap_content" />
+
+    </LinearLayout>
+
+
+
+
+    <LinearLayout
+
+        android:layout_width="fill_parent"
+
+        android:layout_height="wrap_content"
+
+        android:layout_weight="0"
+
+        android:orientation="horizontal" >
+
+
+
+
+        <Button
+
+            android:id="@+id/btnadd"
+
+            android:layout_width="fill_parent"
+
+            android:layout_height="wrap_content"
+
+            android:text="일정 추가" />
+
+    </LinearLayout>
+
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/custom_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/custom_list.xml	(revision )
+++ app/src/main/res/layout/custom_list.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+    <TextView
+        android:id="@+id/txt_userNumber"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+    <TextView
+        android:id="@+id/txt_type"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+    <TextView
+        android:id="@+id/txt_id"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+    <TextView
+        android:id="@+id/txt_passwd"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+    <TextView
+        android:id="@+id/txt_passwdConfirm"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+    <TextView
+        android:id="@+id/txt_deptno"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+
+    <TextView
+        android:id="@+id/txt_dname"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+
+    <TextView
+        android:id="@+id/txt_loc"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView" />
+  
+</LinearLayout>
\ No newline at end of file
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/google-services.json	(revision )
+++ app/google-services.json	(revision )
@@ -0,0 +1,35 @@
+{
+  "project_info": {
+    "project_number": "980963880806",
+    "project_id": "firebase-comssa"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:980963880806:android:5645e68df9e5bb92",
+        "android_client_info": {
+          "package_name": "simplesns.uiseon.com.simplesns"
+        }
+      },
+      "oauth_client": [],
+      "api_key": [
+        {
+          "current_key": "AIzaSyBJrFX1NCNRp9YCOM8Gs25Z0Uy3pIOj7Oc"
+        }
+      ],
+      "services": {
+        "analytics_service": {
+          "status": 1
+        },
+        "appinvite_service": {
+          "status": 1,
+          "other_platform_oauth_client": []
+        },
+        "ads_service": {
+          "status": 1
+        }
+      }
+    }
+  ],
+  "configuration_version": "1"
+}
\ No newline at end of file
Index: app/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app.iml	(revision )
+++ app/app.iml	(revision )
@@ -0,0 +1,172 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":app" external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$/.." external.system.id="GRADLE" external.system.module.group="trunk" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":app" />
+      </configuration>
+    </facet>
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug" />
+        <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
+        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
+        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <afterSyncTasks>
+          <task>generateDebugSources</task>
+        </afterSyncTasks>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
+        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/src/main/res" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/google-services/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/shaders" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/builds" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support.test.espresso/espresso-core/2.2.2/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support.test.espresso/espresso-idling-resource/2.2.2/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support.test/exposed-instrumentation-api-publish/0.5/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support.test/rules/0.5/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support.test/runner/0.5/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/animated-vector-drawable/23.4.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/appcompat-v7/23.4.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/design/23.4.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/recyclerview-v7/23.4.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/support-v4/24.0.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/support-vector-drawable/23.4.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-appindexing/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-base/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-basement/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-gcm/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-iid/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.android.gms/play-services-tasks/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.firebase/firebase-analytics-impl/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.firebase/firebase-analytics/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.firebase/firebase-common/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.firebase/firebase-core/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.google.firebase/firebase-iid/9.8.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-resources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
+      <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 23 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="butterknife-7.0.1" level="project" />
+    <orderEntry type="library" exported="" name="play-services-base-9.8.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="runner-0.5" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="espresso-idling-resource-2.2.2" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="hamcrest-library-1.3" level="project" />
+    <orderEntry type="library" exported="" name="firebase-analytics-impl-9.8.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="hamcrest-integration-1.3" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-24.0.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-appindexing-9.8.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-23.4.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-common-9.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-core-9.8.0" level="project" />
+    <orderEntry type="library" exported="" name="recyclerview-v7-23.4.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-iid-9.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-23.4.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="jsr305-2.0.1" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-23.4.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="espresso-core-2.2.2" level="project" />
+    <orderEntry type="library" exported="" name="design-23.4.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-iid-9.8.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="exposed-instrumentation-api-publish-0.5" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="rules-0.5" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="javax.annotation-api-1.2" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="javax.inject-1" level="project" />
+    <orderEntry type="library" exported="" name="httpcore-4.4.5" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-24.0.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-basement-9.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-tasks-9.8.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="javawriter-2.1.1" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="hamcrest-core-1.3" level="project" />
+    <orderEntry type="library" exported="" name="firebase-analytics-9.8.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="junit-4.12" level="project" />
+    <orderEntry type="library" exported="" name="play-services-gcm-9.8.0" level="project" />
+    <orderEntry type="module" module-name="picasso-2.5.2" exported="" />
+    <orderEntry type="library" exported="" name="android-android-23" level="project" />
+    <orderEntry type="library" exported="" name="org.apache.http.legacy-android-23" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: app/src/main/res/layout/join.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/join.xml	(revision )
+++ app/src/main/res/layout/join.xml	(revision )
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:orientation="vertical"
+
+    android:weightSum="1">
+
+    <LinearLayout
+        android:layout_width="354dp"
+        android:layout_height="140px"
+        android:background="#ed664c"
+        android:gravity="center_vertical"
+        android:orientation="horizontal"
+        android:weightSum="1"
+        android:layout_weight="0.17">
+
+        <TextView
+            android:layout_height="match_parent"
+            android:layout_marginLeft="25px"
+            android:gravity="center"
+            android:text="회 원 가 입"
+            android:textColor="#ffffff"
+            android:textSize="55px"
+            android:textStyle="bold"
+            android:layout_width="323dp" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20px"
+        android:gravity="center_vertical"
+        android:orientation="horizontal"
+        android:weightSum="1">
+        <TextView
+            android:text="이름 : "
+            android:layout_width="123dp"
+            android:layout_height="44dp"
+            android:id="@+id/textView5"
+            android:textColor="@android:color/black" />
+
+        <EditText
+            android:layout_width="208dp"
+            android:layout_height="wrap_content"
+            android:inputType="textEmailAddress"
+            android:ems="10"
+            android:hint="이름"
+            android:id="@+id/etName"
+            android:layout_weight="7.75" />
+
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20px"
+        android:gravity="center_vertical"
+        android:orientation="horizontal"
+        android:weightSum="1">
+        <TextView
+            android:text="타입 : "
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/textView6"
+            android:layout_weight="1"
+            android:textColor="@android:color/black" />
+
+        <EditText
+            android:layout_width="208dp"
+            android:layout_height="wrap_content"
+            android:inputType="textEmailAddress"
+            android:ems="10"
+            android:hint="학생 or 조교수"
+            android:id="@+id/etType" />
+
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20px"
+        android:gravity="center_vertical"
+        android:orientation="horizontal"
+        android:weightSum="1">
+
+
+        <TextView
+            android:text="ID : "
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/textView3"
+            android:layout_weight="1"
+            android:textColor="@android:color/black" />
+
+        <EditText
+            android:layout_width="208dp"
+            android:layout_height="wrap_content"
+            android:inputType="textEmailAddress"
+            android:ems="10"
+            android:hint="학번"
+            android:id="@+id/etID" />
+
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20px"
+        android:gravity="center_vertical"
+        android:orientation="horizontal"
+        android:weightSum="1">
+
+        <TextView
+            android:text="타입 : "
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/textView7"
+            android:layout_weight="1"
+            android:textColor="@android:color/black" />
+        <EditText
+            android:layout_height="wrap_content"
+            android:inputType="textPassword"
+            android:ems="10"
+            android:hint="비밀번호"
+            android:id="@+id/etPassword"
+            android:layout_width="208dp" />
+
+
+    </LinearLayout>
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20px"
+        android:gravity="center_vertical"
+        android:orientation="horizontal"
+        android:weightSum="1">
+        <TextView
+            android:text="타입 : "
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/textView8"
+            android:layout_weight="1"
+            android:textColor="@android:color/black" />
+
+        <EditText
+            android:layout_height="wrap_content"
+            android:inputType="textPassword"
+            android:ems="10"
+            android:hint="비밀번호확인"
+            android:id="@+id/etPasswordConfirm"
+            android:layout_width="208dp" />
+
+
+    </LinearLayout>
+
+
+
+
+
+
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+
+        <Button
+            style="?android:attr/buttonStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="가입"
+            android:id="@+id/btnDone" />
+
+        <Button
+            style="?android:attr/buttonStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="취소"
+            android:id="@+id/btnCancel" />
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/java/simplesns/uiseon/com/simplesns/NoticeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/NoticeActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/NoticeActivity.java	(revision )
@@ -0,0 +1,216 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.xmlpull.v1.XmlPullParser;
+import org.xmlpull.v1.XmlPullParserException;
+import org.xmlpull.v1.XmlPullParserFactory;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+
+import simplesns.uiseon.com.simplesns.calendar.CalendarActivity;
+import simplesns.uiseon.com.simplesns.manager.AutoLayout;
+import simplesns.uiseon.com.simplesns.manager.BoardDTO;
+
+public class NoticeActivity extends Activity {
+    AutoLayout autoLayout = AutoLayout.GetInstance();
+    static String id= null;
+    ArrayList<BoardDTO> boardList = new ArrayList<BoardDTO>();
+    BoardAdapter boardAdapter;
+
+
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.noticeview);
+        Intent intent =getIntent();
+        id = intent.getExtras().getString("id");
+        View view = (View) findViewById(android.R.id.content);
+        autoLayout.setView(view);
+        Button button = (Button) findViewById(R.id.back_btn);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent = new Intent(getApplicationContext(), MainView.class);
+                intent.putExtra("id",id);
+                startActivity(intent);
+                finish();
+            }
+        });
+        requestGet();
+        ListView mainListView = (ListView) findViewById(R.id.main_list_view);
+        boardAdapter = new BoardAdapter(this, R.layout.list_item_main, boardList);
+        mainListView.setAdapter(boardAdapter);
+
+    }
+
+    protected void onResume() {
+        super.onResume();
+        if(android.os.Build.VERSION.SDK_INT > 9) {
+            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+            StrictMode.setThreadPolicy(policy);
+        }
+        requestGet();
+        boardAdapter.notifyDataSetChanged();
+
+    }
+    public void requestGet() {
+        String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/usernoticeselect.jsp";
+        Log.i("xxx", "requestGet start");
+        try {
+            //1.
+            HttpClient client = new DefaultHttpClient();
+
+            HttpGet get = new HttpGet(requestURL);
+            //2. 요청
+            HttpResponse response = client.execute(get);
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+            getXML(is);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        }
+    }//end requestGet()
+    public void getXML(InputStream is) {
+
+        Log.i("xxx", "getXML start!");
+        try {
+            XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
+            XmlPullParser parser = factory.newPullParser();
+            parser.setInput(is, "UTF-8");
+            int eventType = parser.getEventType();
+            BoardDTO dto = null;
+            while( eventType != XmlPullParser.END_DOCUMENT) {
+                switch(eventType) {
+                    case XmlPullParser.START_TAG:
+                        String startTag = parser.getName();
+                        if(startTag.equals("record")){ dto = new BoardDTO(); }
+                        if(dto !=null ) {
+                            if(startTag.equals("board_number")){ dto.setBoard_number(Integer.parseInt(parser.nextText()));}
+                            if(startTag.equals("substance")){ dto.setSubstance(parser.nextText()); }
+                            if(startTag.equals("write_user_id")){ dto.setWrite_user_id(parser.nextText()); }
+                            if(startTag.equals("notice_check")){ dto.setNotice_check(parser.nextText()); }
+                            if(startTag.equals("date")){ dto.setDatetime(parser.nextText()); }
+                        } else { Log.i("xxx", "dto = null"); }
+                        break;
+                    case XmlPullParser.END_TAG:
+                        String endTag = parser.getName();
+                        if(endTag.equals("record")){
+                            boardList.add(dto);
+                        }
+                }//end switch
+                eventType = parser.next();
+            }//end while
+            for( BoardDTO xx : boardList){
+                Log.i("xxx",xx.getBoard_number()+" "+xx.getSubstance()+" "+xx.getWrite_user_id()+ ""+ xx.getDatetime());
+            }
+        } catch (XmlPullParserException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        } catch (IOException ie) {
+            // TODO Auto-generated catch block
+            ie.printStackTrace();
+        }
+
+        boardAdapter.notifyDataSetChanged();
+    }
+
+
+    class BoardAdapter extends ArrayAdapter<BoardDTO> {
+
+
+        ArrayList<BoardDTO> items;
+
+
+        public BoardAdapter(Context context, int textViewResourceId , ArrayList<BoardDTO> items) {
+            super(context,textViewResourceId,items);
+            this.items =items;
+        }
+
+        public View getView(int position, View convertView, ViewGroup parent) {
+            View v = convertView;
+            if (v == null) {
+                LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                v = vi.inflate(R.layout.list_item_main, null);
+                autoLayout.setView(v);
+            }
+            BoardDTO boardDTO = items.get(position);
+
+            if (boardDTO != null) {
+
+               TextView board_numberTextView = (TextView) v.findViewById(R.id.board_numberText);
+               board_numberTextView.setText(Integer.toString(boardDTO.getBoard_number()));
+
+
+                TextView substanceTextView = (TextView) v.findViewById(R.id.substanceText);
+                substanceTextView.setText(boardDTO.getSubstance());
+
+                TextView write_user_idText = (TextView) v.findViewById(R.id.write_user_idText);
+                write_user_idText.setText(boardDTO.getWrite_user_id());
+
+//                TextView notice_checkText = (TextView) v.findViewById(notice_checkText);
+//                notice_checkText.setText(boardDTO.getNotice_check());
+                //잠시대기기
+
+                TextView datetimeText = (TextView) v.findViewById(R.id.datetimeText);
+                datetimeText.setText(boardDTO.getDatetime());
+
+            }
+            return v;
+        }
+
+
+    }
+
+    public void logoutClicked(View v){
+        Intent intent_new = new Intent(getApplicationContext(), MainActivity.class);
+        startActivity(intent_new);
+        finish();
+    }
+
+    public void refreshClicked(View v){
+        Intent intent_main = new Intent(getApplicationContext(), MainView.class);
+        intent_main.putExtra("id",id);
+        startActivity(intent_main);
+    }
+
+    public void calendarClicked (View v){
+        Intent intent_calendar = new Intent(getApplicationContext(), CalendarActivity.class);
+        startActivity(intent_calendar);
+    }
+
+    public void checkClicked(View v){
+        Intent intent_check = new Intent(getApplicationContext(), check.class);
+        startActivity(intent_check);
+    }
+
+
+    public void noticeClicked(View v){
+        Intent intent_refresh = new Intent(getApplicationContext(), NoticeActivity.class);
+        intent_refresh.putExtra("id",id);
+        startActivity(intent_refresh);
+    }
+
+}
+
Index: app/src/main/res/layout/list_item_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_item_view.xml	(revision )
+++ app/src/main/res/layout/list_item_view.xml	(revision )
@@ -0,0 +1,110 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+android:layout_width="match_parent"
+android:layout_height="wrap_content"
+android:background="#e3e3e3"
+android:gravity="center"
+android:orientation="vertical"
+android:paddingBottom="17px"
+android:paddingLeft="35px"
+android:paddingRight="35px"
+android:paddingTop="17px"
+android:weightSum="1">
+
+<LinearLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="#ffffff"
+    android:orientation="vertical"
+    android:padding="35px"
+    android:weightSum="1"
+    android:layout_weight="3.18">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="110px"
+        android:orientation="horizontal"
+        android:weightSum="1">
+
+        <!--<TextView-->
+        <!--android:id="@+id/board_numberText"-->
+        <!--android:layout_width="110px"-->
+        <!--android:layout_height="110px"-->
+        <!--android:text="박천권"-->
+        <!--android:textColor="#000000"-->
+        <!--android:textSize="80px"-->
+        <!--android:textStyle="bold"-->
+        <!--android:background="@drawable/people" />-->
+        <ImageView
+            android:id="@+id/profile_img"
+            android:layout_width="110px"
+            android:layout_height="110px"
+            android:background="@drawable/people" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="20px"
+            android:gravity="center_vertical"
+            android:orientation="horizontal"
+            android:weightSum="1">
+
+            <TextView
+                android:id="@+id/commentId"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="201215548"
+                android:textColor="#000000"
+                android:textSize="50px"
+                android:textStyle="bold" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:id="@+id/commentName"
+                android:text="류원상"
+                android:textColor="#000000"
+                android:textSize="50px"
+                android:textStyle="bold"
+                android:layout_weight="0.60" />
+
+            <TextView
+                android:text="댓글"
+                android:layout_width="39dp"
+                android:layout_height="wrap_content"
+                android:textColor="@android:color/holo_purple"
+                android:id="@+id/textView"
+                android:layout_weight="0.39" />
+
+
+        </LinearLayout>
+
+
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/commentDate"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="7px"
+        android:text="12월 26일"
+        android:textColor="#000000"
+        android:textSize="25px" />
+
+
+    <TextView
+        android:id="@+id/commentText"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40px"
+
+        android:ellipsize="end"
+        android:maxLines="3"
+        android:textColor="#222222"
+        android:textSize="45px"
+        android:layout_weight="1.58" />
+
+
+</LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/WriteActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/WriteActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/WriteActivity.java	(revision )
@@ -0,0 +1,150 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.utils.URLEncodedUtils;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+
+import simplesns.uiseon.com.simplesns.manager.AutoLayout;
+
+public class WriteActivity extends Activity {
+
+    private AutoLayout autoLayout = AutoLayout.GetInstance();
+
+    //private EditText etStoryTitle;
+    private EditText etSubstance;
+    String id = null;
+    String check = "0" ;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_write);
+        Intent intent =getIntent();
+        id = intent.getExtras().getString("id");
+
+        View view = (View) findViewById(android.R.id.content);
+        autoLayout.setView(view);
+        Button button = (Button) findViewById(R.id.back_btn);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(android.os.Build.VERSION.SDK_INT > 9) {
+                    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+                    StrictMode.setThreadPolicy(policy);
+                }
+                sendStory();
+                Intent intent_write = new Intent(getApplicationContext(), MainView.class);
+                intent_write.putExtra("id",id);
+                startActivity(intent_write);
+                finish();
+            }
+        });
+        // etStoryTitle = (EditText) findViewById(R.id.storyEditTitle);
+        //1 공지사항  0이 기본
+        //체크박스
+        etSubstance = (EditText) findViewById(R.id.storyEditText);
+
+        Button sendBtn = (Button) findViewById(R.id.send_btn);
+        sendBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(android.os.Build.VERSION.SDK_INT > 9) {
+                    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+                    StrictMode.setThreadPolicy(policy);
+                }
+                sendStory();
+                Intent intent_write = new Intent(getApplicationContext(), MainView.class);
+                intent_write.putExtra("id",id);
+                startActivity(intent_write);
+                finish();
+
+            }
+        });
+
+        CheckBox checkbox = (CheckBox) findViewById(R.id.checkbox2);
+        checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView,
+                                         boolean isChecked) {
+                if (buttonView.getId() == R.id.checkbox2) {
+                    if (isChecked) {
+                        check = "1";
+                    } else {
+                        check ="0";
+                    }
+                }
+            }
+        });
+
+    }
+    private void sendStory() {
+        //String storyTitle = etStoryTitle.getText().toString();
+        String substance = etSubstance.getText().toString();
+        String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/userwrite.jsp";
+        InputStream is = requestGet(requestURL,id,substance,check);
+
+        if (substance.equals("")) {
+            Toast.makeText(this, "내용을 입력하세요", Toast.LENGTH_SHORT).show();
+            return;
+        }
+//        else if (체크박스.equals("")) { 체크박스확인 안씀
+//            Toast.makeText(this, "공지사항 여부를 체크해주세요", Toast.LENGTH_SHORT).show();
+//            return;
+//        }
+
+    }
+    public InputStream requestGet(String requestURL, String id,String substance, String check) {
+
+        Log.i("xxx", "requestGet start");
+        try {
+            if(android.os.Build.VERSION.SDK_INT > 9) {
+
+                StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+
+                StrictMode.setThreadPolicy(policy);
+            }
+            //1.
+            HttpClient client = new DefaultHttpClient();
+            //폼데이터 저장
+            List<NameValuePair> dataList = new ArrayList<NameValuePair>();
+            dataList.add(new BasicNameValuePair("id", id));
+            dataList.add(new BasicNameValuePair("substance", substance));
+            dataList.add(new BasicNameValuePair("check", check));
+            requestURL = requestURL + "?" + URLEncodedUtils.format(dataList, "UTF-8");
+            HttpGet get = new HttpGet(requestURL);
+
+            //2. 요청
+            HttpResponse response = client.execute(get);
+
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+            return is;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }//end requestGet()
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_check.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_check.xml	(revision )
+++ app/src/main/res/layout/activity_check.xml	(revision )
@@ -0,0 +1,24 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
+    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:background="@color/blue_grey_700"
+    android:orientation="vertical" tools:context=".MainActivity">
+
+    <Button android:id="@+id/registrationButton"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" android:text="@string/registering_message_ready" />
+
+    <TextView android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/informationTextView"
+        android:textAppearance="?android:attr/textAppearanceMedium"/>
+
+    <ProgressBar
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/registrationProgressBar" />
+
+</LinearLayout>
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in F:\ProgramFiles\Android\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/test/java/simplesns/uiseon/com/simplesns/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/simplesns/uiseon/com/simplesns/ExampleUnitTest.java	(revision )
+++ app/src/test/java/simplesns/uiseon/com/simplesns/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package simplesns.uiseon.com.simplesns;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/check.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/check.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/check.java	(revision )
@@ -0,0 +1,153 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.os.Bundle;
+import android.support.v4.content.LocalBroadcastManager;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.GooglePlayServicesUtil;
+
+public class check extends AppCompatActivity {
+
+    private static final int PLAY_SERVICES_RESOLUTION_REQUEST = 9000;
+    private static final String TAG = "MainActivity";
+
+    private Button mRegistrationButton;
+    private ProgressBar mRegistrationProgressBar;
+    private BroadcastReceiver mRegistrationBroadcastReceiver;
+    private TextView mInformationTextView;
+
+    /**
+     * Instance ID를 이용하여 디바이스 토큰을 가져오는 RegistrationIntentService를 실행한다.
+     */
+    public void getInstanceIdToken() {
+        if (checkPlayServices()) {
+            // Start IntentService to register this application with GCM.
+            Intent intent = new Intent(this, RegistrationIntentService.class);
+            startService(intent);
+        }
+    }
+
+    /**
+     * LocalBroadcast 리시버를 정의한다. 토큰을 획득하기 위한 READY, GENERATING, COMPLETE 액션에 따라 UI에 변화를 준다.
+     */
+    public void registBroadcastReceiver(){
+        mRegistrationBroadcastReceiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                String action = intent.getAction();
+
+
+                if(action.equals(QuickstartPreferences.REGISTRATION_READY)){
+                    // 액션이 READY일 경우
+                    mRegistrationProgressBar.setVisibility(ProgressBar.GONE);
+                    mInformationTextView.setVisibility(View.GONE);
+                } else if(action.equals(QuickstartPreferences.REGISTRATION_GENERATING)){
+                    // 액션이 GENERATING일 경우
+                    mRegistrationProgressBar.setVisibility(ProgressBar.VISIBLE);
+                    mInformationTextView.setVisibility(View.VISIBLE);
+                    mInformationTextView.setText(getString(R.string.registering_message_generating));
+                } else if(action.equals(QuickstartPreferences.REGISTRATION_COMPLETE)){
+                    // 액션이 COMPLETE일 경우
+                    mRegistrationProgressBar.setVisibility(ProgressBar.GONE);
+                    mRegistrationButton.setText(getString(R.string.registering_message_complete));
+                    mRegistrationButton.setEnabled(false);
+                    String token = intent.getStringExtra("token");
+                    mInformationTextView.setText(token);
+                }
+
+            }
+        };
+    }
+
+
+    @Override
+    //UI를 정의하고 이벤트와 핸들러를 정의한다.
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_check);
+
+        registBroadcastReceiver();
+
+        // 토큰을 보여줄 TextView를 정의
+        mInformationTextView = (TextView) findViewById(R.id.informationTextView);
+        mInformationTextView.setVisibility(View.GONE);
+        // 토큰을 가져오는 동안 인디케이터를 보여줄 ProgressBar를 정의
+        mRegistrationProgressBar = (ProgressBar) findViewById(R.id.registrationProgressBar);
+        mRegistrationProgressBar.setVisibility(ProgressBar.GONE);
+        // 토큰을 가져오는 Button을 정의
+        mRegistrationButton = (Button) findViewById(R.id.registrationButton);
+        mRegistrationButton.setOnClickListener(new View.OnClickListener() {
+            /**
+             * 버튼을 클릭하면 토큰을 가져오는 getInstanceIdToken() 메소드를 실행한다.
+             * @param view
+             */
+            @Override
+            public void onClick(View view) {
+                getInstanceIdToken();
+            }
+        });
+
+    }
+
+    /**
+     * 앱이 실행되어 화면에 나타날때 LocalBoardcastManager에 액션을 정의하여 등록한다.
+     */
+    @Override
+    //화면이 보여질때 LocalBroadcastManager를 정의한다.
+    protected void onResume() {
+        super.onResume();
+        LocalBroadcastManager.getInstance(this).registerReceiver(mRegistrationBroadcastReceiver,
+                new IntentFilter(QuickstartPreferences.REGISTRATION_READY));
+        LocalBroadcastManager.getInstance(this).registerReceiver(mRegistrationBroadcastReceiver,
+                new IntentFilter(QuickstartPreferences.REGISTRATION_GENERATING));
+        LocalBroadcastManager.getInstance(this).registerReceiver(mRegistrationBroadcastReceiver,
+                new IntentFilter(QuickstartPreferences.REGISTRATION_COMPLETE));
+
+    }
+
+    /**
+     * 앱이 화면에서 사라지면 등록된 LocalBoardcast를 모두 삭제한다.
+     */
+    @Override
+    //화면이 사라질때 LocalB
+    protected void onPause() {
+        LocalBroadcastManager.getInstance(this).unregisterReceiver(mRegistrationBroadcastReceiver);
+        super.onPause();
+    }
+
+
+    /**
+     * Google Play Service를 사용할 수 있는 환경이지를 체크한다.
+     */
+    private boolean checkPlayServices() {
+        int resultCode = GooglePlayServicesUtil.isGooglePlayServicesAvailable(this);
+        if (resultCode != ConnectionResult.SUCCESS) {
+            if (GooglePlayServicesUtil.isUserRecoverableError(resultCode)) {
+                GooglePlayServicesUtil.getErrorDialog(resultCode, this,
+                        PLAY_SERVICES_RESOLUTION_REQUEST).show();
+            } else {
+                Log.i(TAG, "This device is not supported.");
+                finish();
+            }
+            return false;
+        }
+        return true;
+    }
+
+    public void checkClicked(View v){
+        finish();
+    }
+}
+
+
Index: app/src/main/res/layout/activity_write.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_write.xml	(revision )
+++ app/src/main/res/layout/activity_write.xml	(revision )
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#ffffff"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+        android:gravity="center_vertical">
+
+
+        <Button
+            android:id="@+id/back_btn"
+            android:layout_width="195px"
+            android:layout_height="90px"
+            android:layout_marginLeft="25px"
+            android:gravity="center"
+            android:text="뒤로"
+            android:textColor="#ffffff"
+            android:textSize="45px"
+            android:background="#ed664c" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="1px"
+        android:background="#cfcfcf"></LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:padding="65px"
+        android:layout_weight="1"
+        android:orientation="vertical"
+        android:weightSum="1"
+        android:baselineAligned="false">
+        <!--<EditText-->
+        <!--android:id="@+id/storyEditTitle"-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:textSize="45px"-->
+        <!--android:hint="올리고 싶은 이야기"-->
+        <!--android:textColorHint="#cfcfcf"-->
+        <!--android:layout_height="wrap_content" />-->
+        <EditText
+            android:id="@+id/storyEditText"
+            android:layout_width="match_parent"
+            android:textSize="100px"
+            android:hint="올리고 싶은 이야기"
+            android:textColorHint="#cfcfcf"
+            android:layout_height="wrap_content"
+            android:layout_weight="0.81" />
+
+        <CheckBox
+            android:id="@+id/checkbox2"
+            android:layout_height="wrap_content"
+            android:paddingLeft="5dp"
+            android:layout_weight="0.24"
+            android:layout_width="128dp"
+            tools:textColor="@color/colorAccent"
+            android:textColor="@color/colorAccent"
+            android:text="공지사항 여부" />
+
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="1px"
+        android:background="#cfcfcf"></LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="140px"
+
+        android:gravity="center_vertical|right">
+
+        <Button
+            android:id="@+id/send_btn"
+            android:layout_width="195px"
+            android:layout_height="90px"
+            android:layout_marginRight="25px"
+            android:gravity="center"
+            android:text="올리기"
+            android:textColor="#ffffff"
+            android:textSize="45px"
+            android:background="#ed664c" />
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/CommentDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/CommentDTO.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/CommentDTO.java	(revision )
@@ -0,0 +1,72 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+
+public class CommentDTO {
+    private int comment_number;
+    private int board_number;
+    private String substance;
+    private String write_user_id;
+    private String name;
+    private String datetime;
+
+
+    public CommentDTO(int comment_number,int board_number, String substance, String write_user_id, String name, String datetime) {
+        super();
+        this.comment_number = comment_number;
+        this.board_number = board_number;
+        this.substance = substance;
+        this.write_user_id = write_user_id;
+        this.name = name;
+        this.datetime = datetime;
+
+    }
+
+    public CommentDTO() {
+        super();
+    }
+
+    public void setComment_number(int comment_number) {this.comment_number = comment_number;}
+
+    public void setBoard_number(int board_number) {
+        this.board_number = board_number;
+    }
+
+    public void setSubstance(String substance) {
+        this.substance = substance;
+    }
+
+    public void setWrite_user_id(String write_user_id) {
+        this.write_user_id = write_user_id;
+    }
+
+
+
+    public void setDatetime(String datetime) {
+        this.datetime = datetime;
+    }
+    public void setName(String name) {this.name = name;}
+
+    public int getComment_number(){return comment_number;}
+
+    public int getBoard_number() {
+        return board_number;
+    }
+
+    public String getSubstance() {
+        return substance;
+    }
+
+    public String getWrite_user_id() {
+        return write_user_id;
+    }
+
+
+
+    public String getDatetime() {
+        return datetime;
+    }
+
+
+    public String getName(){return name;}
+
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/AutoLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/AutoLayout.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/AutoLayout.java	(revision )
@@ -0,0 +1,513 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+import android.app.ActionBar;
+import android.content.Context;
+import android.support.v4.view.ViewPager;
+import android.util.Log;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.WindowManager;
+import android.widget.AbsListView;
+import android.widget.FrameLayout;
+import android.widget.GridLayout;
+import android.widget.LinearLayout;
+import android.widget.RadioGroup;
+import android.widget.RelativeLayout;
+import android.widget.TableLayout;
+import android.widget.TableRow;
+import android.widget.TextView;
+
+public class AutoLayout {
+    private static AutoLayout instance;
+
+    public static AutoLayout GetInstance() {
+        return instance;
+    }
+
+    static {
+        instance = new AutoLayout();
+    }
+
+    public void init(Context context, int initWidth, int initHeight) {
+        disPlayWidth = initWidth;
+        disPlayHeight = initHeight;
+    }
+
+    public static int disPlayWidth = 0;
+    public static int disPlayHeight = 0;
+
+    public void setView(View tempView) {
+        setByWidth(tempView);
+        if (tempView instanceof ViewGroup) {
+            for (int i = 0; i < ((ViewGroup) tempView).getChildCount(); i++) {
+                View child = ((ViewGroup) tempView).getChildAt(i);
+                setView(child);
+            }
+        }
+    }
+
+    private void set(View tempView) {
+        ViewGroup.LayoutParams tempParam = tempView
+                .getLayoutParams();
+
+        if (tempParam instanceof LinearLayout.LayoutParams) {
+            LinearLayout.LayoutParams LParam = (LinearLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+
+        } else if (tempParam instanceof RelativeLayout.LayoutParams) {
+            RelativeLayout.LayoutParams LParam = (RelativeLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+
+        } else if (tempParam instanceof FrameLayout.LayoutParams) {
+            FrameLayout.LayoutParams LParam = (FrameLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+
+        } else if (tempParam instanceof ViewPager.LayoutParams) {
+            ViewPager.LayoutParams LParam = (ViewPager.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+        } else if (tempParam instanceof AbsListView.LayoutParams) {
+            AbsListView.LayoutParams LParam = (AbsListView.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+        } else if (tempParam instanceof ActionBar.LayoutParams) {
+            ActionBar.LayoutParams LParam = (ActionBar.LayoutParams) tempParam;
+            // LParam.width = calWidth(LParam.width);
+            // LParam.height = calHeight(LParam.height);
+            // LParam.leftMargin = calWidth(LParam.leftMargin);
+            // LParam.rightMargin = calWidth(LParam.rightMargin);
+            // LParam.topMargin = calHeight(LParam.topMargin);
+            // LParam.bottomMargin = calHeight(LParam.bottomMargin);
+            Log.e("test", "ActionBar no resize functions");
+        } else if (tempParam instanceof ViewGroup.LayoutParams) {
+            ViewGroup.LayoutParams LParam = (ViewGroup.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+        } else if (tempParam instanceof WindowManager.LayoutParams) {
+            WindowManager.LayoutParams LParam = (WindowManager.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+        } else if (tempParam instanceof GridLayout.LayoutParams) {
+            GridLayout.LayoutParams LParam = (GridLayout.LayoutParams) tempParam;
+            // LParam.width = calWidth(LParam.width);
+            // LParam.height = calHeight(LParam.height);
+            // LParam.leftMargin = calWidth(LParam.leftMargin);
+            // LParam.rightMargin = calWidth(LParam.rightMargin);
+            // LParam.topMargin = calHeight(LParam.topMargin);
+            // LParam.bottomMargin = calHeight(LParam.bottomMargin);
+            Log.e("test", "GridLayout no resize functions");
+        } else if (tempParam instanceof RadioGroup.LayoutParams) {
+            RadioGroup.LayoutParams LParam = (RadioGroup.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+        } else if (tempParam instanceof TableLayout.LayoutParams) {
+            TableLayout.LayoutParams LParam = (TableLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+        } else if (tempParam instanceof TableRow.LayoutParams) {
+            TableRow.LayoutParams LParam = (TableRow.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+        } else if (tempParam == null) {
+            Log.e("test", "param is null !!");
+        } else {
+            Log.e("test", "no resize functions !!");
+        }
+
+        int left = calWidth(tempView.getPaddingLeft());
+        int right = calWidth(tempView.getPaddingRight());
+        int top = calHeight(tempView.getPaddingTop());
+        int bottom = calHeight(tempView.getPaddingBottom());
+        tempView.setPadding(left, top, right, bottom);
+        if (tempView instanceof TextView) {
+            TextView textview = (TextView) tempView;
+            textview.setTextSize(0, calHeight((int) textview.getTextSize()));
+        }
+    }
+
+    public void setView1080(View tempView) {
+        set1080(tempView);
+        if (tempView instanceof ViewGroup) {
+            for (int i = 0; i < ((ViewGroup) tempView).getChildCount(); i++) {
+                View child = ((ViewGroup) tempView).getChildAt(i);
+                setView1080(child);
+            }
+        }
+    }
+
+    private void set1080(View tempView) {
+//		setFont(tempView);
+        ViewGroup.LayoutParams tempParam = tempView
+                .getLayoutParams();
+
+        if (tempParam instanceof LinearLayout.LayoutParams) {
+            LinearLayout.LayoutParams LParam = (LinearLayout.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+            LParam.leftMargin = calWidth1080(LParam.leftMargin);
+            LParam.rightMargin = calWidth1080(LParam.rightMargin);
+            LParam.topMargin = calHeight1080(LParam.topMargin);
+            LParam.bottomMargin = calHeight1080(LParam.bottomMargin);
+
+        } else if (tempParam instanceof RelativeLayout.LayoutParams) {
+            RelativeLayout.LayoutParams LParam = (RelativeLayout.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+            LParam.leftMargin = calWidth1080(LParam.leftMargin);
+            LParam.rightMargin = calWidth1080(LParam.rightMargin);
+            LParam.topMargin = calHeight1080(LParam.topMargin);
+            LParam.bottomMargin = calHeight1080(LParam.bottomMargin);
+
+        } else if (tempParam instanceof FrameLayout.LayoutParams) {
+            FrameLayout.LayoutParams LParam = (FrameLayout.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+            LParam.leftMargin = calWidth1080(LParam.leftMargin);
+            LParam.rightMargin = calWidth1080(LParam.rightMargin);
+            LParam.topMargin = calHeight1080(LParam.topMargin);
+            LParam.bottomMargin = calHeight1080(LParam.bottomMargin);
+
+        } else if (tempParam instanceof ViewPager.LayoutParams) {
+            ViewPager.LayoutParams LParam = (ViewPager.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+        } else if (tempParam instanceof AbsListView.LayoutParams) {
+            AbsListView.LayoutParams LParam = (AbsListView.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+        } else if (tempParam instanceof ActionBar.LayoutParams) {
+            ActionBar.LayoutParams LParam = (ActionBar.LayoutParams) tempParam;
+            Log.e("test", "ActionBar no resize functions");
+        } else if (tempParam instanceof ViewGroup.LayoutParams) {
+            ViewGroup.LayoutParams LParam = (ViewGroup.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+        } else if (tempParam instanceof WindowManager.LayoutParams) {
+            WindowManager.LayoutParams LParam = (WindowManager.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+        } else if (tempParam instanceof GridLayout.LayoutParams) {
+            GridLayout.LayoutParams LParam = (GridLayout.LayoutParams) tempParam;
+            Log.e("test", "GridLayout no resize functions");
+        } else if (tempParam instanceof RadioGroup.LayoutParams) {
+            RadioGroup.LayoutParams LParam = (RadioGroup.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+            LParam.leftMargin = calWidth1080(LParam.leftMargin);
+            LParam.rightMargin = calWidth1080(LParam.rightMargin);
+            LParam.topMargin = calHeight1080(LParam.topMargin);
+            LParam.bottomMargin = calHeight1080(LParam.bottomMargin);
+        } else if (tempParam instanceof TableLayout.LayoutParams) {
+            TableLayout.LayoutParams LParam = (TableLayout.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+            LParam.leftMargin = calWidth1080(LParam.leftMargin);
+            LParam.rightMargin = calWidth1080(LParam.rightMargin);
+            LParam.topMargin = calHeight1080(LParam.topMargin);
+            LParam.bottomMargin = calHeight1080(LParam.bottomMargin);
+        } else if (tempParam instanceof TableRow.LayoutParams) {
+            TableRow.LayoutParams LParam = (TableRow.LayoutParams) tempParam;
+            LParam.width = calWidth1080(LParam.width);
+            LParam.height = calHeight1080(LParam.height);
+            LParam.leftMargin = calWidth1080(LParam.leftMargin);
+            LParam.rightMargin = calWidth1080(LParam.rightMargin);
+            LParam.topMargin = calHeight1080(LParam.topMargin);
+            LParam.bottomMargin = calHeight1080(LParam.bottomMargin);
+        } else if (tempParam == null) {
+            Log.e("test", "param is null !!");
+        } else {
+            Log.e("test", "no resize functions !!");
+        }
+
+        int left = calWidth1080(tempView.getPaddingLeft());
+        int right = calWidth1080(tempView.getPaddingRight());
+        int top = calHeight1080(tempView.getPaddingTop());
+        int bottom = calHeight1080(tempView.getPaddingBottom());
+
+        tempView.setPadding(left, top, right, bottom);
+        if (tempView instanceof TextView) {
+            TextView textview = (TextView) tempView;
+            textview.setTextSize(0, calHeight1080((int) textview.getTextSize()));
+        }
+    }
+
+    private int calWidth1080(int getwidth) {
+        if (getwidth > 0) {
+            return getwidth * disPlayWidth / 1080;
+            // return getwidth * disPlayWidth / 720;
+        } else {
+            return getwidth;
+        }
+    }
+
+    private int calHeight1080(int getheight) {
+        if (getheight > 0) {
+            return getheight * disPlayHeight / 1920;
+            // return getheight * disPlayHeight / 1080;
+        } else {
+            return getheight;
+        }
+    }
+
+    public void setWidthView(View tempView) {
+        setByWidth(tempView);
+        if (tempView instanceof ViewGroup) {
+            for (int i = 0; i < ((ViewGroup) tempView).getChildCount(); i++) {
+                View child = ((ViewGroup) tempView).getChildAt(i);
+                setWidthView(child);
+            }
+        }
+    }
+
+    private void setByWidth(View tempView) {
+//		setFont(tempView);
+        ViewGroup.LayoutParams tempParam = tempView
+                .getLayoutParams();
+
+        if (tempParam instanceof LinearLayout.LayoutParams) {
+            LinearLayout.LayoutParams LParam = (LinearLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+
+        } else if (tempParam instanceof RelativeLayout.LayoutParams) {
+            RelativeLayout.LayoutParams LParam = (RelativeLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+
+        } else if (tempParam instanceof FrameLayout.LayoutParams) {
+            FrameLayout.LayoutParams LParam = (FrameLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+
+        } else if (tempParam instanceof ViewPager.LayoutParams) {
+            ViewPager.LayoutParams LParam = (ViewPager.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+        } else if (tempParam instanceof AbsListView.LayoutParams) {
+            AbsListView.LayoutParams LParam = (AbsListView.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+        } else if (tempParam instanceof ActionBar.LayoutParams) {
+            ActionBar.LayoutParams LParam = (ActionBar.LayoutParams) tempParam;
+            // LParam.width = calWidth(LParam.width);
+            // LParam.height = calWidth(LParam.height);
+            // LParam.leftMargin = calWidth(LParam.leftMargin);
+            // LParam.rightMargin = calWidth(LParam.rightMargin);
+            // LParam.topMargin = calWidth(LParam.topMargin);
+            // LParam.bottomMargin = calWidth(LParam.bottomMargin);
+            Log.e("test", "ActionBar no resize functions");
+        } else if (tempParam instanceof ViewGroup.LayoutParams) {
+            ViewGroup.LayoutParams LParam = (ViewGroup.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+        } else if (tempParam instanceof WindowManager.LayoutParams) {
+            WindowManager.LayoutParams LParam = (WindowManager.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+        } else if (tempParam instanceof GridLayout.LayoutParams) {
+            GridLayout.LayoutParams LParam = (GridLayout.LayoutParams) tempParam;
+            // LParam.width = calWidth(LParam.width);
+            // LParam.height = calWidth(LParam.height);
+            // LParam.leftMargin = calWidth(LParam.leftMargin);
+            // LParam.rightMargin = calWidth(LParam.rightMargin);
+            // LParam.topMargin = calWidth(LParam.topMargin);
+            // LParam.bottomMargin = calWidth(LParam.bottomMargin);
+            Log.e("test", "GridLayout no resize functions");
+        } else if (tempParam instanceof RadioGroup.LayoutParams) {
+            RadioGroup.LayoutParams LParam = (RadioGroup.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+        } else if (tempParam instanceof TableLayout.LayoutParams) {
+            TableLayout.LayoutParams LParam = (TableLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+        } else if (tempParam instanceof TableRow.LayoutParams) {
+            TableRow.LayoutParams LParam = (TableRow.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+        } else if (tempParam == null) {
+            Log.e("test", "param is null !!");
+        } else {
+            Log.e("test", "no resize functions !!");
+        }
+
+        int left = calWidth(tempView.getPaddingLeft());
+        int right = calWidth(tempView.getPaddingRight());
+        int top = calWidth(tempView.getPaddingTop());
+        int bottom = calWidth(tempView.getPaddingBottom());
+        tempView.setPadding(left, top, right, bottom);
+        if (tempView instanceof TextView) {
+            TextView textview = (TextView) tempView;
+            textview.setTextSize(0, calWidth((int) textview.getTextSize()));
+        }
+    }
+
+    private void setWidthStand(View tempView) {
+        ViewGroup.LayoutParams tempParam = tempView
+                .getLayoutParams();
+
+        if (tempParam instanceof LinearLayout.LayoutParams) {
+            LinearLayout.LayoutParams LParam = (LinearLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+
+        } else if (tempParam instanceof RelativeLayout.LayoutParams) {
+            RelativeLayout.LayoutParams LParam = (RelativeLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+
+        } else if (tempParam instanceof FrameLayout.LayoutParams) {
+            FrameLayout.LayoutParams LParam = (FrameLayout.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+            LParam.leftMargin = calWidth(LParam.leftMargin);
+            LParam.rightMargin = calWidth(LParam.rightMargin);
+            LParam.topMargin = calWidth(LParam.topMargin);
+            LParam.bottomMargin = calWidth(LParam.bottomMargin);
+
+        } else if (tempParam instanceof ViewPager.LayoutParams) {
+            ViewPager.LayoutParams LParam = (ViewPager.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+
+        } else if (tempParam instanceof AbsListView.LayoutParams) {
+            AbsListView.LayoutParams LParam = (AbsListView.LayoutParams) tempParam;
+            LParam.width = calWidth(LParam.width);
+            LParam.height = calWidth(LParam.height);
+        } else {
+            Log.e("test", "no resize functions");
+        }
+
+        int left = calWidth(tempView.getPaddingLeft());
+        int right = calWidth(tempView.getPaddingRight());
+        int top = calWidth(tempView.getPaddingTop());
+        int bottom = calWidth(tempView.getPaddingBottom());
+        tempView.setPadding(left, top, right, bottom);
+    }
+
+    private void setHeightStand(View tempView) {
+        ViewGroup.LayoutParams tempParam = tempView
+                .getLayoutParams();
+
+        if (tempParam instanceof LinearLayout.LayoutParams) {
+            LinearLayout.LayoutParams LParam = (LinearLayout.LayoutParams) tempParam;
+            LParam.width = calHeight(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calHeight(LParam.leftMargin);
+            LParam.rightMargin = calHeight(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+
+        } else if (tempParam instanceof RelativeLayout.LayoutParams) {
+            RelativeLayout.LayoutParams LParam = (RelativeLayout.LayoutParams) tempParam;
+            LParam.width = calHeight(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calHeight(LParam.leftMargin);
+            LParam.rightMargin = calHeight(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+
+        } else if (tempParam instanceof FrameLayout.LayoutParams) {
+            FrameLayout.LayoutParams LParam = (FrameLayout.LayoutParams) tempParam;
+            LParam.width = calHeight(LParam.width);
+            LParam.height = calHeight(LParam.height);
+            LParam.leftMargin = calHeight(LParam.leftMargin);
+            LParam.rightMargin = calHeight(LParam.rightMargin);
+            LParam.topMargin = calHeight(LParam.topMargin);
+            LParam.bottomMargin = calHeight(LParam.bottomMargin);
+
+        } else if (tempParam instanceof ViewPager.LayoutParams) {
+            ViewPager.LayoutParams LParam = (ViewPager.LayoutParams) tempParam;
+            LParam.width = calHeight(LParam.width);
+            LParam.height = calHeight(LParam.height);
+
+        } else if (tempParam instanceof AbsListView.LayoutParams) {
+            AbsListView.LayoutParams LParam = (AbsListView.LayoutParams) tempParam;
+            LParam.width = calHeight(LParam.width);
+            LParam.height = calHeight(LParam.height);
+        } else {
+            Log.e("test", "no resize functions");
+        }
+
+        int left = calHeight(tempView.getPaddingLeft());
+        int right = calHeight(tempView.getPaddingRight());
+        int top = calHeight(tempView.getPaddingTop());
+        int bottom = calHeight(tempView.getPaddingBottom());
+        tempView.setPadding(left, top, right, bottom);
+    }
+
+    private int calWidth(int getwidth) {
+        if (getwidth > 0) {
+            return getwidth * disPlayWidth / 1080;
+        } else {
+            return getwidth;
+        }
+    }
+
+    private int calHeight(int getheight) {
+        if (getheight > 0) {
+            return getheight * disPlayHeight / 1920;
+        } else {
+            return getheight;
+        }
+    }
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/manager/CircleTransform.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/manager/CircleTransform.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/manager/CircleTransform.java	(revision )
@@ -0,0 +1,42 @@
+package simplesns.uiseon.com.simplesns.manager;
+
+import com.squareup.picasso.Transformation;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+
+public class CircleTransform implements Transformation {
+	@Override
+	public Bitmap transform(Bitmap source) {
+		int size = Math.min(source.getWidth(), source.getHeight());
+
+		int x = (source.getWidth() - size) / 2;
+		int y = (source.getHeight() - size) / 2;
+
+		Bitmap squaredBitmap = Bitmap.createBitmap(source, x, y, size, size);
+		if (squaredBitmap != source) {
+			source.recycle();
+		}
+
+		Bitmap bitmap = Bitmap.createBitmap(size, size, source.getConfig());
+
+		Canvas canvas = new Canvas(bitmap);
+		Paint paint = new Paint();
+		BitmapShader shader = new BitmapShader(squaredBitmap, BitmapShader.TileMode.CLAMP, BitmapShader.TileMode.CLAMP);
+		paint.setShader(shader);
+		paint.setAntiAlias(true);
+
+		float r = size / 2f;
+		canvas.drawCircle(r, r, r, paint);
+
+		squaredBitmap.recycle();
+		return bitmap;
+	}
+
+	@Override
+	public String key() {
+		return "circle";
+	}
+}
\ No newline at end of file
Index: app/src/main/res/layout/list_header_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_header_view.xml	(revision )
+++ app/src/main/res/layout/list_header_view.xml	(revision )
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="#e3e3e3"
+    android:gravity="center"
+    android:orientation="vertical"
+    android:paddingBottom="17px"
+    android:paddingLeft="35px"
+    android:paddingRight="35px"
+    android:paddingTop="17px"
+    android:weightSum="1">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="#ffffff"
+        android:orientation="vertical"
+        android:padding="35px"
+        android:weightSum="1"
+        android:layout_weight="3.18">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="110px"
+            android:orientation="horizontal"
+            android:weightSum="1">
+
+            <!--<TextView-->
+            <!--android:id="@+id/board_numberText"-->
+            <!--android:layout_width="110px"-->
+            <!--android:layout_height="110px"-->
+            <!--android:text="박천권"-->
+            <!--android:textColor="#000000"-->
+            <!--android:textSize="80px"-->
+            <!--android:textStyle="bold"-->
+            <!--android:background="@drawable/people" />-->
+            <ImageView
+                android:id="@+id/profile_img"
+                android:layout_width="110px"
+                android:layout_height="110px"
+                android:background="@drawable/people" />
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="20px"
+                android:gravity="center_vertical"
+                android:orientation="horizontal"
+                android:weightSum="1">
+
+                <TextView
+                    android:id="@+id/write_user_idText"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="201215548"
+                    android:textColor="#000000"
+                    android:textSize="50px"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:id="@+id/name"
+                    android:text="류원상"
+                    android:textColor="#000000"
+                    android:textSize="50px"
+                    android:textStyle="bold"
+                    android:layout_weight="0.79" />
+
+                <TextView
+
+                    android:layout_width="wrap_content"
+                    android:id="@+id/board_numberText"
+
+
+                    android:text="50"
+                    android:textColor="@color/colorPrimaryDark"
+                    android:layout_height="wrap_content" />
+
+            </LinearLayout>
+
+
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/datetimeText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="7px"
+            android:text="12월 26일"
+            android:textColor="#000000"
+            android:textSize="25px" />
+
+        <TextView
+            android:id="@+id/notice_check"
+            android:layout_width="126dp"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="7px"
+            android:text="*공지사항*"
+            android:textColor="@android:color/holo_red_dark"
+            android:textSize="40px" />
+
+        <TextView
+            android:id="@+id/substanceText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40px"
+
+            android:ellipsize="end"
+            android:maxLines="3"
+            android:textColor="#222222"
+            android:textSize="45px"
+            android:layout_weight="1.58" />
+
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,37 @@
+<resources>
+    <string name="app_name">ComSSa</string>
+    <string name="registering_message_ready">InstanceID 토큰 가져오기</string>
+    <string name="registering_message_generating">InstanceID 토큰 생성중...</string>
+    <string name="registering_message_complete">완료!</string>
+    <string-array name="day_of_week">
+        <item>sun</item>
+        <item>mon</item>
+        <item>tue</item>
+        <item>wed</item>
+        <item>thu</item>
+        <item>fri</item>
+        <item>sat</item>
+    </string-array>
+
+    <string name="login_msg">로그인을 해주세요</string>
+    <string name="login_id">학 번 : </string>
+    <string name="login_pw">비밀번호 : </string>
+    <string name="login_btn">로그인</string>
+    <string name="join_btn">회원가입</string>
+
+    <string-array name="yearSpinner">
+        <item>1</item>
+        <item>2</item>
+        <item>3</item>
+        <item>4</item>
+        <item>5</item>
+        <item>6</item>
+        <item>7</item>
+        <item>8</item>
+        <item>9</item>
+        <item>10</item>
+        <item>11</item>
+        <item>12</item>
+    </string-array>
+
+</resources>
Index: app/src/main/java/simplesns/uiseon/com/simplesns/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/MainActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/MainActivity.java	(revision )
@@ -0,0 +1,176 @@
+package simplesns.uiseon.com.simplesns;
+
+/**
+ * Created by user on 2016-11-19.
+ */
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.os.Handler;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.utils.URLEncodedUtils;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.params.HttpConnectionParams;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.util.ArrayList;
+import java.util.List;
+
+public class MainActivity extends Activity {
+
+    EditText et_id;
+    EditText et_pw;
+    TextView tv_msg;
+
+    private static String id = "";
+    private static String pw = "";
+    private static String msgString = null;
+    private static boolean isConnected = false;
+    protected void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.main);
+
+        et_id = (EditText) findViewById(R.id.edit_id);
+        et_pw = (EditText) findViewById(R.id.edit_pw);
+
+
+
+        Button btn_join = (Button) findViewById(R.id.btn_join);
+        btn_join.setOnClickListener(new View.OnClickListener() {
+
+
+            public void onClick(View v) {
+                Intent intent = new Intent(getApplicationContext(), JoinActivity.class);
+                startActivity(intent);
+            }
+        });
+
+        final Button btn_login = (Button) findViewById(R.id.btn_login);
+        btn_login.setOnClickListener(new View.OnClickListener() {
+
+            public void onClick(View v) {
+                String url = "http://27.1.165.192:8082/99JSP_myEMP/userlogin2.jsp";
+                id = et_id.getText().toString();
+                pw = et_pw.getText().toString();
+
+
+                if ((id.length() == 0) || (pw.length() == 0)) {
+                    Toast.makeText(MainActivity.this, "다시입력하세요", Toast.LENGTH_LONG).show();
+                    Intent intent_retry = new Intent(getApplicationContext(), MainActivity.class);
+                    startActivity(intent_retry);
+                    finish();
+                } else {
+                    new Handler().post(new Runnable() {
+
+                        public void run() {
+                            String url = "http://27.1.165.192:8082/99JSP_myEMP/userlogin2.jsp";
+//                                                              String url = "http://125.179.204.2:8080/AndroidServer/login.jsp?id=mygirl2&pwd=1111";
+
+
+                            new MainActivity().connect(url);
+                            //이게 중요함
+                            while (true) {
+                                if (isConnected) {
+
+                                    Log.v("xxx", msgString);
+                                    if (msgString.equals(id + "님 로그인되었습니다. 환영합니다.")) {
+                                        Toast.makeText(MainActivity.this, msgString, Toast.LENGTH_LONG).show();
+                                        Intent intent = new Intent(getApplicationContext(), MainView.class);
+                                        intent.putExtra("id", id);
+                                        startActivity(intent);
+                                    } else {
+                                        Toast.makeText(MainActivity.this, "다시입력하세요", Toast.LENGTH_LONG).show();
+
+                                    }
+                                    break;
+                                }
+                            }
+                        }
+                    });
+                }
+            }
+        });
+
+
+    }
+
+
+
+
+    private void setText(String s) {
+        tv_msg.setText(s);
+    }
+
+    private void connect(String url){
+        new WebConnection().execute(url);
+    }
+    private class WebConnection extends AsyncTask<String, Void, HttpResponse> {
+
+        @Override
+        protected HttpResponse doInBackground(String... urls) {
+            HttpClient client = new DefaultHttpClient();
+            HttpConnectionParams.setConnectionTimeout(client.getParams(), 10000);
+            List<NameValuePair> list = new ArrayList<NameValuePair>();
+            list.add(new BasicNameValuePair("id", id));
+            list.add(new BasicNameValuePair("passwd", pw));
+
+            Log.i("id", id);
+            Log.i("passwd", pw);
+
+            String url = urls[0] + "?" + URLEncodedUtils.format(list, "UTF-8");
+//                              String url = "http://125.179.204.2:8080/AndroidServer/login.jsp?id=mygirl2&pwd=1111";
+
+            HttpGet httpGet = new HttpGet(url);
+
+            HttpResponse response = null;
+            String s ="";
+            StringBuffer sb = null;
+            try {
+                response = client.execute(httpGet);
+                HttpEntity entity = response.getEntity();
+                InputStream is;
+                BufferedReader br = null;
+                if(entity != null) {
+                    is = entity.getContent();
+                    br =  new BufferedReader(new InputStreamReader(is));
+                    s = "";
+                    sb = new StringBuffer();
+                }
+                while((s = br.readLine()) != null) {
+                    sb.append(s);
+                }
+                Log.i("sb : ", sb.toString());
+                msgString = sb.toString().trim().toString();
+                Log.i("msgString : ", msgString);
+                isConnected = true;
+            } catch (ClientProtocolException e) {
+                e.printStackTrace();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+
+            return response;
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/MyInstanceIDListenerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/MyInstanceIDListenerService.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/MyInstanceIDListenerService.java	(revision )
@@ -0,0 +1,19 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.content.Intent;
+
+import com.google.android.gms.iid.InstanceIDListenerService;
+
+/**
+ * Created by saltfactory on 6/8/15.
+ */
+public class MyInstanceIDListenerService extends InstanceIDListenerService {
+
+    private static final String TAG = "MyInstanceIDLS";
+
+    @Override
+    public void onTokenRefresh() {
+        Intent intent = new Intent(this, RegistrationIntentService.class);
+        startService(intent);
+    }
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,40 @@
+apply plugin: 'com.android.application'
+
+android {
+    useLibrary 'org.apache.http.legacy'
+    compileSdkVersion 23
+    buildToolsVersion "25.0.0"
+    defaultConfig {
+        applicationId "simplesns.uiseon.com.simplesns"
+        minSdkVersion 19
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    productFlavors {
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:23.+'
+    compile 'com.android.support:design:23.+'
+    compile 'com.jakewharton:butterknife:7.0.1'
+    compile project(':picasso-2.5.2')
+    //컴파일 할때 play-services라이브러리 필요하니 없으면 다운 받아서 컴파일때 사용하라고 추가.
+    compile 'com.google.android.gms:play-services-gcm:9.8.0'
+    compile 'com.google.android.gms:play-services-appindexing:9.8.0'
+    compile 'org.apache.httpcomponents:httpcore:4.4.5'
+    compile 'org.apache.httpcomponents:httpclient:4.5.2'
+    testCompile 'junit:junit:4.12'
+}
+apply plugin: 'com.google.gms.google-services'
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/LaunchActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/LaunchActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/LaunchActivity.java	(revision )
@@ -0,0 +1,52 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.os.SystemClock;
+import android.view.View;
+
+import simplesns.uiseon.com.simplesns.manager.AutoLayout;
+
+public class LaunchActivity extends Activity {
+    private SharedPreferences pref;
+    private AutoLayout autoLayout = AutoLayout.GetInstance();
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_launch);
+
+        int disWidth = this.getResources().getDisplayMetrics().widthPixels;
+        int disHeight = this.getResources().getDisplayMetrics().heightPixels;
+
+        autoLayout.init(this, disWidth, disHeight);
+
+        View view = (View)findViewById(android.R.id.content);
+        autoLayout.setView(view);
+
+        pref = this.getSharedPreferences("simpleSns", Activity.MODE_PRIVATE);
+
+
+        Thread t = new Thread() {
+            public void run() {
+                SystemClock.sleep(1000);
+                mhandler.sendEmptyMessage(0);
+            }
+        };
+        t.start();
+    }
+
+    Handler mhandler = new Handler() {
+        public void handleMessage(Message msg) {
+            finish();
+            Intent intent = new Intent(LaunchActivity.this, MainActivity.class);
+            startActivity(intent);
+
+
+        }
+    };
+
+}
Index: app/src/main/java/simplesns/uiseon/com/simplesns/ViewActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/ViewActivity.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/ViewActivity.java	(revision )
@@ -0,0 +1,302 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ListView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.utils.URLEncodedUtils;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.xmlpull.v1.XmlPullParser;
+import org.xmlpull.v1.XmlPullParserException;
+import org.xmlpull.v1.XmlPullParserFactory;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+
+import simplesns.uiseon.com.simplesns.manager.AutoLayout;
+import simplesns.uiseon.com.simplesns.manager.CommentDTO;
+
+public class ViewActivity extends Activity {
+    private AutoLayout autoLayout = AutoLayout.GetInstance();
+    private ArrayList<CommentDTO> commentInfoArrayList = new ArrayList<CommentDTO>();
+    private CommentAdapter commentAdapter;
+
+    private EditText commentEditText;
+    String id = null;
+    String write_user_id = null;
+    int board_number;
+    String name ;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_view);
+        Intent intent = getIntent();
+
+        id = intent.getStringExtra("id");
+        write_user_id = intent.getStringExtra("write_user_id");
+        board_number = intent.getExtras().getInt("board_number");
+        String notice_check = intent.getStringExtra("notice_check");
+        String storyText = intent.getStringExtra("storyText");
+        name = intent.getStringExtra("name");
+        String date = intent.getStringExtra("writeDate");
+
+
+        View view = (View) findViewById(android.R.id.content);
+        autoLayout.setView(view);
+
+        commentEditText = (EditText) findViewById(R.id.commentEditText);
+
+        Button button = (Button) findViewById(R.id.back_btn);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(android.os.Build.VERSION.SDK_INT > 9) {
+                    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+                    StrictMode.setThreadPolicy(policy);
+                }
+                Intent intent_main = new Intent(getApplicationContext(), MainView.class);
+                intent_main.putExtra("id",id);
+                startActivity(intent_main);
+                finish();
+            }
+        });
+
+
+        Button sendBtn = (Button) findViewById(R.id.send_btn);
+        sendBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(android.os.Build.VERSION.SDK_INT > 9) {
+                    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+                    StrictMode.setThreadPolicy(policy);
+                }
+                sendComment();
+                commentEditText.setText("");
+                requestGet(board_number);
+//                Intent intent_comment = new Intent(getApplicationContext(), ViewActivity.class);
+//                intent_comment.putExtra("id",id);
+//                startActivity(intent_write);
+//                finish();
+
+                //내용 입력하고 전송하기
+
+            }
+        });
+
+        ListView listView = (ListView) findViewById(R.id.listView);
+
+        LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        View headerView = vi.inflate(R.layout.list_header_view, null);
+
+
+
+
+
+
+
+
+        TextView board_numberTextView = (TextView) headerView.findViewById(R.id.board_numberText);
+        board_numberTextView.setText(String.valueOf(board_number));
+
+        TextView nameTextView = (TextView) headerView.findViewById(R.id.name);
+        nameTextView.setText(name);
+        TextView substanceTextView = (TextView) headerView.findViewById(R.id.substanceText);
+        substanceTextView.setText(storyText);
+
+        TextView write_user_idText = (TextView) headerView.findViewById(R.id.write_user_idText);
+        write_user_idText.setText(write_user_id);
+
+        TextView notice_checkText = (TextView) headerView.findViewById(R.id.notice_check);
+        if(notice_check.equals("0"))
+            notice_checkText.setText(" ");
+
+
+        TextView datetimeText = (TextView) headerView.findViewById(R.id.datetimeText);
+        datetimeText.setText("date");
+
+
+
+
+        autoLayout.setView(headerView);
+
+
+        listView.addHeaderView(headerView);
+
+        commentAdapter = new CommentAdapter(this, R.layout.list_item_view, commentInfoArrayList);
+        listView.setAdapter(commentAdapter);
+
+        requestGet(board_number);
+    }
+    public void requestGet(int board_number) {
+        String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/usercommentselect.jsp"+"?board_number="+board_number;
+        Log.i("xxx", "requestGet start");
+        try {
+            //1.
+            HttpClient client = new DefaultHttpClient();
+
+            HttpGet get = new HttpGet(requestURL);
+            //2. 요청
+            HttpResponse response = client.execute(get);
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+            getXML(is);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        }
+    }//end requestGet()
+    public void getXML(InputStream is) {
+
+        Log.i("xxx", "getXML start!");
+        try {
+            commentInfoArrayList.clear();
+            XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
+            XmlPullParser parser = factory.newPullParser();
+            parser.setInput(is, "UTF-8");
+            int eventType = parser.getEventType();
+            CommentDTO dto = null;
+            while( eventType != XmlPullParser.END_DOCUMENT) {
+                switch(eventType) {
+                    case XmlPullParser.START_TAG:
+                        String startTag = parser.getName();
+                        Log.i("xxxx", startTag);
+                        if(startTag.equals("record")){ dto = new CommentDTO(); }
+                        if(dto !=null ) {
+                            if(startTag.equals("comment_number")){ dto.setComment_number(Integer.parseInt(parser.nextText()));}
+                            if(startTag.equals("board_number")){ dto.setBoard_number(Integer.parseInt(parser.nextText())); }
+                            if(startTag.equals("substance")){ dto.setSubstance(parser.nextText()); }
+                            if(startTag.equals("write_user_id")){ dto.setWrite_user_id(parser.nextText()); }
+                            if(startTag.equals("name")){ dto.setName(parser.nextText()); }
+                            if(startTag.equals("date")){ dto.setDatetime(parser.nextText()); }
+                        } else { Log.i("xxx", "dto = null"); }
+                        break;
+                    case XmlPullParser.END_TAG:
+                        String endTag = parser.getName();
+                        if(endTag.equals("record")){
+                            commentInfoArrayList.add(dto);
+                        }
+                }//end switch
+                eventType = parser.next();
+            }//end while
+            for( CommentDTO xx : commentInfoArrayList){
+                Log.i("xxx",xx.getBoard_number()+" "+xx.getSubstance()+" "+xx.getWrite_user_id()+ " "+ xx.getDatetime()+" "+xx.getName()+" ");
+            }
+        } catch (XmlPullParserException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        } catch (IOException ie) {
+            // TODO Auto-generated catch block
+            ie.printStackTrace();
+        }
+
+        commentAdapter.notifyDataSetChanged();
+    }
+    public void sendComment(){
+        String commentText = commentEditText.getText().toString();
+        String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/usercommentinsertdo2.jsp";
+        Log.i("xxx", "requestGet start");
+        try {
+            if(android.os.Build.VERSION.SDK_INT > 9) {
+
+                StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+
+                StrictMode.setThreadPolicy(policy);
+            }
+            //1.
+            HttpClient client = new DefaultHttpClient();
+            //폼데이터 저장
+            List<NameValuePair> dataList = new ArrayList<NameValuePair>();
+            dataList.add(new BasicNameValuePair("board_number", String.valueOf(board_number)));
+            dataList.add(new BasicNameValuePair("substance", commentText));
+            dataList.add(new BasicNameValuePair("write_user_id", write_user_id));
+            dataList.add(new BasicNameValuePair("name",name));
+
+            requestURL = requestURL + "?" + URLEncodedUtils.format(dataList, "UTF-8");
+            HttpGet get = new HttpGet(requestURL);
+
+            //2. 요청
+            HttpResponse response = client.execute(get);
+
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+
+
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        }
+
+        if (commentText.equals("")) {
+            Toast.makeText(this, "내용을 입력하세요", Toast.LENGTH_SHORT).show();
+            return;
+        }
+
+    }
+    //수정완료
+    private class CommentAdapter extends ArrayAdapter<CommentDTO> {
+
+        private ArrayList<CommentDTO> items;
+
+        public CommentAdapter(Context context, int textViewResourceId, ArrayList<CommentDTO> items) {
+            super(context, textViewResourceId, items);
+            this.items = items;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            View v = convertView;
+            if (v == null) {
+                LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                v = vi.inflate(R.layout.list_item_view, null);
+                autoLayout.setView(v);
+            }
+
+
+            CommentDTO commentInfo = items.get(position);
+
+            if (commentInfo != null) {
+                //댓글 다는 id
+                TextView idTextView = (TextView) v.findViewById(R.id.commentId);
+                idTextView.setText(id);
+                //댓글 다는 이름
+                TextView nameTextView = (TextView) v.findViewById(R.id.commentName);
+                nameTextView.setText(commentInfo.getName());
+                //댓글 다는 날짜
+                TextView dateTextView = (TextView) v.findViewById(R.id.commentDate);
+                dateTextView.setText(commentInfo.getDatetime());
+                //댓글 내용
+                TextView storyText = (TextView) v.findViewById(R.id.commentText);
+                storyText.setText(commentInfo.getSubstance());
+
+            }
+            return v;
+        }
+    }
+
+
+
+}
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(revision )
+++ app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <item name="android:textColor">@android:color/white</item>
+        <item name="android:textSize">16sp</item>
+        <item name="android:indeterminateTint">@android:color/white</item>
+    </style>
+</resources>
Index: app/src/androidTest/java/simplesns/uiseon/com/simplesns/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/simplesns/uiseon/com/simplesns/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/simplesns/uiseon/com/simplesns/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,107 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="simplesns.uiseon.com.simplesns">
+
+    <!-- 디바이스에 GCM서비스를 사용하기 위한 권한 설정 -->
+    <!-- [START gcm_permission] -->
+    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
+    <!-- 디바이스가 잠금이되어 화면이 꺼져있을 경우에도 GCM을 받을 수 있기 위해서 디바이스를 꺠우는 권한 필요. -->
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+    <!-- [END gcm_permission] -->
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity
+            android:name=".LaunchActivity"
+            android:screenOrientation="portrait"
+            android:theme="@android:style/Theme.NoTitleBar">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".WriteActivity"
+            android:screenOrientation="portrait"
+            android:theme="@android:style/Theme.Black.NoTitleBar" />
+        <activity
+            android:name=".MainView"
+            android:screenOrientation="portrait"
+            android:theme="@android:style/Theme.Black.NoTitleBar" />
+        <activity
+            android:name=".ViewActivity"
+            android:screenOrientation="portrait"
+            android:theme="@android:style/Theme.Black.NoTitleBar" />
+        <activity android:name=".check" />
+        <activity android:name=".calendar.MultiCalendarActivity" />
+        <activity android:name=".JoinActivity" />
+        <activity android:name=".MainActivity" />
+        <activity android:name=".NoticeActivity" />
+        <!--
+ ATTENTION: This was auto-generated to add Google Play services to your project for
+     App Indexing.  See https://g.co/AppIndexing/AndroidStudio for more information.
+        -->
+        <meta-data
+            android:name="com.google.android.gms.version"
+            android:value="@integer/google_play_services_version" />
+
+        <!-- GCM을 받았을 때 동작하기 위한 리시버 -->
+        <!-- [START gcm_receiver] -->
+        <!-- 리시버는 라이브러리 안에 구현체가 있으므로 정의만 하면 된다. -->
+        <receiver
+            android:name="com.google.android.gms.gcm.GcmReceiver"
+            android:exported="true"
+            android:permission="com.google.android.c2dm.permission.SEND">
+            <intent-filter>
+                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
+
+                <category android:name="net.saltfactory.demo.gcm" />
+            </intent-filter>
+        </receiver>
+        <!-- [END gcm_receiver] -->
+
+
+        <!-- GCM 요청을 대기하고 있는 리스너 서비스 -->
+        <!-- [START gcm_listener_service] -->
+        <service
+            android:name=".MyGcmListenerService"
+            android:exported="false">
+            <intent-filter>
+                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
+            </intent-filter>
+        </service>
+        <!-- [END gcm_listener_service] -->
+
+
+        <!-- InstanceID 요청을 대기하고 있는 리스너 서비스 -->
+        <!-- [START instanceId_listener_service] -->
+        <service
+            android:name=".MyInstanceIDListenerService"
+            android:exported="false">
+            <intent-filter>
+                <action android:name="com.google.android.gms.iid.InstanceID" />
+            </intent-filter>
+        </service>
+        <!-- [END instanceId_listener_service] -->
+
+
+        <!-- GCM 등록하기 위한 서비스 -->
+        <!-- [START gcm_registration_service] -->
+        <service
+            android:name=".RegistrationIntentService"
+            android:exported="false" />
+        <!-- [END gcm_registration_service] -->
+        <activity android:name=".calendar.CalendarActivity" />
+        <activity android:name=".calendar.ExToday" />
+        <activity android:name=".calendar.Detail"></activity>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/src/main/java/simplesns/uiseon/com/simplesns/MainView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/simplesns/uiseon/com/simplesns/MainView.java	(revision )
+++ app/src/main/java/simplesns/uiseon/com/simplesns/MainView.java	(revision )
@@ -0,0 +1,283 @@
+package simplesns.uiseon.com.simplesns;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.xmlpull.v1.XmlPullParser;
+import org.xmlpull.v1.XmlPullParserException;
+import org.xmlpull.v1.XmlPullParserFactory;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+
+import simplesns.uiseon.com.simplesns.calendar.CalendarActivity;
+import simplesns.uiseon.com.simplesns.manager.AutoLayout;
+import simplesns.uiseon.com.simplesns.manager.BoardDTO;
+
+public class MainView extends Activity {
+    AutoLayout autoLayout = AutoLayout.GetInstance();
+    static String id= null;
+    ArrayList<BoardDTO> boardList = new ArrayList<BoardDTO>();
+    BoardAdapter boardAdapter;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        requestGet();
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.mainview);
+        View view = (View) findViewById(android.R.id.content);
+        autoLayout.setView(view);
+
+
+        Intent intent = getIntent();
+        id = intent.getExtras().getString("id");
+        Log.v("xxx", id);
+
+        Button writeBtn = (Button) findViewById(R.id.main_button);
+        writeBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent = new Intent(getApplicationContext(), WriteActivity.class);
+                intent.putExtra("id", id);
+                startActivity(intent);
+                finish();
+            }
+        });
+
+        ListView mainListView = (ListView) findViewById(R.id.main_list_view);
+        boardAdapter = new BoardAdapter(this, R.layout.list_item_main, boardList);
+        mainListView.setAdapter(boardAdapter);
+
+
+
+
+        mainListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (position < boardList.size()) {
+                    BoardDTO boardDTO = boardList.get(position);
+                    //본인 ID
+                    String loginId = MainView.id;
+                    //작성자 ID
+                    String write_user_id = boardDTO.getWrite_user_id();
+                    //글 번호
+                    int board_number = boardDTO.getBoard_number();
+                    //내용
+                    String storyText = boardDTO.getSubstance();
+                    //글 확인 했는지 체크
+                    String notice_check = boardDTO.getNotice_check();
+                    //글 쓴 시간
+                    String writeDate = boardDTO.getDatetime();
+
+                    String name = boardDTO.getName();
+
+
+                    Intent intent = new Intent(MainView.this, ViewActivity.class);
+                    //본인 ID
+                    intent.putExtra("id", loginId);
+                    //작성자 ID
+                    intent.putExtra("write_user_id", write_user_id);
+                    //게시글 번호
+                    intent.putExtra("board_number", board_number);
+                    //확인 했는지 체크
+                    intent.putExtra("notice_check", notice_check);
+                    //내용 넣기
+                    intent.putExtra("storyText", storyText);
+                    //작성된 날짜
+                    intent.putExtra("writeDate", writeDate);
+                    //작성자 이름
+                    intent.putExtra("name",name);
+
+                    startActivity(intent);
+                }
+            }
+        });
+
+    }
+
+
+
+
+
+    protected void onResume() {
+        super.onResume();
+        if(android.os.Build.VERSION.SDK_INT > 9) {
+            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+            StrictMode.setThreadPolicy(policy);
+        }
+        requestGet();
+        boardAdapter.notifyDataSetChanged();
+
+
+
+
+
+    }
+    public void requestGet() {
+        String requestURL = "http://27.1.165.192:8082/99JSP_myEMP/userboardselect.jsp";
+        Log.i("xxx", "requestGet start");
+        try {
+            //1.
+            HttpClient client = new DefaultHttpClient();
+
+            HttpGet get = new HttpGet(requestURL);
+            //2. 요청
+            HttpResponse response = client.execute(get);
+            //3. 결과 받기
+            HttpEntity entity = response.getEntity();
+            InputStream is = entity.getContent();
+            getXML(is);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        }
+    }//end requestGet()
+    public void getXML(InputStream is) {
+
+        Log.i("xxx", "getXML start!");
+        try {
+            XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
+            XmlPullParser parser = factory.newPullParser();
+            parser.setInput(is, "UTF-8");
+            int eventType = parser.getEventType();
+            BoardDTO dto = null;
+            while( eventType != XmlPullParser.END_DOCUMENT) {
+                switch(eventType) {
+                    case XmlPullParser.START_TAG:
+                        String startTag = parser.getName();
+                        if(startTag.equals("record")){ dto = new BoardDTO(); }
+                        if(dto !=null ) {
+                            if(startTag.equals("board_number")){ dto.setBoard_number(Integer.parseInt(parser.nextText()));}
+                            if(startTag.equals("substance")){ dto.setSubstance(parser.nextText()); }
+                            if(startTag.equals("write_user_id")){ dto.setWrite_user_id(parser.nextText()); }
+                            if(startTag.equals("notice_check")){ dto.setNotice_check(parser.nextText()); }
+                            if(startTag.equals("date")){ dto.setDatetime(parser.nextText()); }
+                            if(startTag.equals("name")){ dto.setName(parser.nextText()); }
+                        } else { Log.i("xxx", "dto = null"); }
+                        break;
+                    case XmlPullParser.END_TAG:
+                        String endTag = parser.getName();
+                        if(endTag.equals("record")){
+                            boardList.add(dto);
+                        }
+                }//end switch
+                eventType = parser.next();
+            }//end while
+            for( BoardDTO xx : boardList){
+                Log.i("xxx",xx.getBoard_number()+" "+xx.getSubstance()+" "+xx.getWrite_user_id()+ " "+ xx.getDatetime()+" "+xx.getNotice_check()+" ");
+            }
+        } catch (XmlPullParserException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        } catch (IOException ie) {
+            // TODO Auto-generated catch block
+            ie.printStackTrace();
+        }
+
+        boardAdapter.notifyDataSetChanged();
+    }
+
+    public void logoutClicked(View v){
+        Intent intent_new = new Intent(getApplicationContext(), MainActivity.class);
+        startActivity(intent_new);
+        finish();
+    }
+
+
+    public void refreshClicked (View v){
+        Intent intent_refresh = new Intent(getApplicationContext(), MainView.class);
+        intent_refresh.putExtra("id",id);
+        startActivity(intent_refresh);
+        finish();
+    }
+
+
+    public void calendarClicked (View v){
+        Intent intent_calendar = new Intent(getApplicationContext(), CalendarActivity.class);
+        intent_calendar.putExtra("id",id);
+        startActivity(intent_calendar);
+    }
+
+    public void checkClicked(View v){
+        Intent intent_check = new Intent(getApplicationContext(), check.class);
+        startActivity(intent_check);
+    }
+    public void noticeClicked(View v){
+        Intent intent_notice = new Intent(getApplicationContext(), NoticeActivity.class);
+        intent_notice.putExtra("id",id);
+        startActivity(intent_notice);
+    }
+
+    class BoardAdapter extends ArrayAdapter<BoardDTO> {
+
+
+        ArrayList<BoardDTO> items;
+
+
+        public BoardAdapter(Context context, int textViewResourceId , ArrayList<BoardDTO> items) {
+            super(context,textViewResourceId,items);
+            this.items =items;
+        }
+
+
+        public View getView(int position, View convertView, ViewGroup parent) {
+            View v = convertView;
+            if (v == null) {
+                LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                v = vi.inflate(R.layout.list_item_main, null);
+                autoLayout.setView(v);
+            }
+
+
+            BoardDTO boardDTO = items.get(position);
+
+            if (boardDTO != null) {
+
+                TextView board_numberTextView = (TextView) v.findViewById(R.id.board_numberText);
+                board_numberTextView.setText(Integer.toString(boardDTO.getBoard_number()));
+
+                TextView nameTextView = (TextView) v.findViewById(R.id.name);
+                nameTextView.setText(boardDTO.getName());
+                TextView substanceTextView = (TextView) v.findViewById(R.id.substanceText);
+                substanceTextView.setText(boardDTO.getSubstance());
+
+                TextView write_user_idText = (TextView) v.findViewById(R.id.write_user_idText);
+                write_user_idText.setText(boardDTO.getWrite_user_id());
+
+                TextView notice_checkText = (TextView) v.findViewById(R.id.notice_check);
+                if(boardDTO.getNotice_check().equals("0"))
+                    notice_checkText.setText(" ");
+
+
+
+
+
+                TextView datetimeText = (TextView) v.findViewById(R.id.datetimeText);
+                datetimeText.setText(boardDTO.getDatetime());
+
+            }
+            return v;
+        }
+    }
+}
+
